(()=>{"use strict";var e={4899:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.pingHealthCheckUrl=t.handleQueueUrl=t.handleMonitorUrl=t.pingOneApiUrl=t.pingAllApisUrl=t.getApiUrl=t.editApiUrl=t.deleteApiUrl=t.getAllApisStatsUrl=t.getAllApisUrl=t.createApiUrl=t.authUserUrl=t.loginUserUrl=t.registerUserUrl=t.resetMockMonitorDbUrl=t.seedMockApisDbUrl=t.resetMockApisDbUrl=t.seedMockUsersDbUrl=t.resetMockUsersDbUrl=t.baseSeedDbUrl=t.baseQueueUrl=t.baseMonitorUrl=t.baseApiUrl=t.baseAuthUrl=void 0,t.baseAuthUrl="/api/auth",t.baseApiUrl="/api/api",t.baseMonitorUrl="/api/monitor",t.baseQueueUrl="/api/queue",t.baseSeedDbUrl="/api/mockDb",t.registerUserUrl="/register",t.loginUserUrl="/login",t.authUserUrl="/user",t.createApiUrl="",t.getAllApisUrl="",t.getAllApisStatsUrl="/stats",t.deleteApiUrl="",t.editApiUrl="",t.getApiUrl="",t.pingAllApisUrl="/ping/all",t.pingOneApiUrl="/ping",t.handleMonitorUrl="",t.handleQueueUrl="",t.resetMockUsersDbUrl="/resetDb/users",t.resetMockApisDbUrl="/resetDb/api",t.resetMockMonitorDbUrl="/resetDb/monitor",t.seedMockUsersDbUrl="/seedDb/users",t.seedMockApisDbUrl="/seedDb/api",t.pingHealthCheckUrl="/api/ping"},5975:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.cookieHttpOnlySetting=t.cookieSameSiteSetting=t.cookieSecureSetting=t.cookieExpiryTime=t.cookieName=void 0;const i=a(5447);t.cookieName="apiSherlockId",t.cookieExpiryTime=864e5,t.cookieSecureSetting=!!i.PROD_ENV,t.cookieSameSiteSetting=i.PROD_ENV?"none":"lax",t.cookieHttpOnlySetting=!!i.PROD_ENV},5447:function(e,t,a){var i,r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TEST_ENV=t.PROD_ENV=t.REDIS_PASSWORD=t.REDIS_USERNAME=t.REDIS_PORT=t.REDIS_HOST=t.NODE_ENV=t.JWT_ACCESS_TOKEN_LIFETIME=void 0,r(a(5142)).default.config(),i=process.env,t.JWT_ACCESS_TOKEN_LIFETIME=i.JWT_ACCESS_TOKEN_LIFETIME,t.NODE_ENV="production",t.REDIS_HOST=i.REDIS_HOST,t.REDIS_PORT=i.REDIS_PORT,t.REDIS_USERNAME=i.REDIS_USERNAME,t.REDIS_PASSWORD=i.REDIS_PASSWORD,t.PROD_ENV="production"===t.NODE_ENV,t.TEST_ENV="test"===t.NODE_ENV},5994:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.pingHealthCheckSuccessMsg=t.deleteMonitorSuccessMsg=t.pingOneApiSuccessMsg=t.pingAllApisSuccessMsg=t.deleteApiSuccessMsg=void 0,t.deleteApiSuccessMsg={msg:"Success! Api removed"},t.pingAllApisSuccessMsg={msg:"Pinged APIs!"},t.pingOneApiSuccessMsg={msg:"Pinged API!"},t.deleteMonitorSuccessMsg={msg:"Success! Monitor turned off"},t.pingHealthCheckSuccessMsg="hello world!"},6658:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.validApiHostOptions=t.validApiMonitoringOptions=t.validApiStatusOptions=t.validApiSortOptions=t.validApiSearchParams=t.validUpdateApiKeys=t.validCreateApiKeys=void 0;const r=a(5213),o=i(a(5445));t.validCreateApiKeys=Object.keys(o.default.schema.obj),t.validUpdateApiKeys=t.validCreateApiKeys,t.validApiSearchParams=Object.values(r.ApiQueryParamsEnum),t.validApiSortOptions=Object.values(r.ApiSortOptions),t.validApiStatusOptions=Object.values(r.ApiStatusOptions),t.validApiMonitoringOptions=Object.values(r.ApiMonitoringOptions),t.validApiHostOptions=Object.values(r.ApiHostOptions)},3367:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.stringDaysOptions=t.getEnumDay=t.validMonitorDateAMorPMOptions=t.validMonitorDateMinuteOptions=t.validMonitorDateHourOptions=t.validMonitorDateDayOfWeekOptions=t.validMonitorScheduleTypeOptions=t.validMonitorIntervalScheduleOptions=t.validMonitorSettingOptions=t.validUpdateMonitorKeys=t.validCreateMonitorKeys=void 0;const i=a(8801),r=a(4871);function o(e,t){return e[t]}t.validCreateMonitorKeys=Object.keys(r.mockMonitor),t.validUpdateMonitorKeys=t.validCreateMonitorKeys,t.validMonitorSettingOptions=Object.values(i.MonitorSettingOptions),t.validMonitorIntervalScheduleOptions=Object.values(i.MonitorIntervalScheduleOptions),t.validMonitorScheduleTypeOptions=Object.values(i.MonitorScheduleTypeOptions),t.validMonitorDateDayOfWeekOptions=Array.from({length:7},((e,t)=>t)),t.validMonitorDateHourOptions=[...Array(13).keys()].slice(1),t.validMonitorDateMinuteOptions=Array.from({length:60},((e,t)=>t)),t.validMonitorDateAMorPMOptions=Object.values(i.MonitorDateAMOrPMOptions),t.getEnumDay=o,t.stringDaysOptions=[],Object.values(t.validMonitorDateDayOfWeekOptions).forEach((e=>t.stringDaysOptions.push(o(i.MonitorDateDayOfWeekOptions,e))))},4571:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.timezoneOffsets=void 0;const i=a(8169);t.timezoneOffsets=[...new Set(i.timezones.map((e=>e.offset)))]},8169:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.timezones=void 0,t.timezones=[{value:"Dateline Standard Time",abbr:"DST",offset:-12,isdst:!1,text:"(UTC-12:00) International Date Line West",utc:["Etc/GMT+12"]},{value:"UTC-11",abbr:"U",offset:-11,isdst:!1,text:"(UTC-11:00) Coordinated Universal Time-11",utc:["Etc/GMT+11","Pacific/Midway","Pacific/Niue","Pacific/Pago_Pago"]},{value:"Hawaiian Standard Time",abbr:"HST",offset:-10,isdst:!1,text:"(UTC-10:00) Hawaii",utc:["Etc/GMT+10","Pacific/Honolulu","Pacific/Johnston","Pacific/Rarotonga","Pacific/Tahiti"]},{value:"Alaskan Standard Time",abbr:"AKDT",offset:-8,isdst:!0,text:"(UTC-09:00) Alaska",utc:["America/Anchorage","America/Juneau","America/Nome","America/Sitka","America/Yakutat"]},{value:"Pacific Standard Time (Mexico)",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Baja California",utc:["America/Santa_Isabel"]},{value:"Pacific Daylight Time",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-07:00) Pacific Daylight Time (US & Canada)",utc:["America/Los_Angeles","America/Tijuana","America/Vancouver"]},{value:"Pacific Standard Time",abbr:"PST",offset:-8,isdst:!1,text:"(UTC-08:00) Pacific Standard Time (US & Canada)",utc:["America/Los_Angeles","America/Tijuana","America/Vancouver","PST8PDT"]},{value:"US Mountain Standard Time",abbr:"UMST",offset:-7,isdst:!1,text:"(UTC-07:00) Arizona",utc:["America/Creston","America/Dawson","America/Dawson_Creek","America/Hermosillo","America/Phoenix","America/Whitehorse","Etc/GMT+7"]},{value:"Mountain Standard Time (Mexico)",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",utc:["America/Chihuahua","America/Mazatlan"]},{value:"Mountain Standard Time",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Mountain Time (US & Canada)",utc:["America/Boise","America/Cambridge_Bay","America/Denver","America/Edmonton","America/Inuvik","America/Ojinaga","America/Yellowknife","MST7MDT"]},{value:"Central America Standard Time",abbr:"CAST",offset:-6,isdst:!1,text:"(UTC-06:00) Central America",utc:["America/Belize","America/Costa_Rica","America/El_Salvador","America/Guatemala","America/Managua","America/Tegucigalpa","Etc/GMT+6","Pacific/Galapagos"]},{value:"Central Standard Time",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Central Time (US & Canada)",utc:["America/Chicago","America/Indiana/Knox","America/Indiana/Tell_City","America/Matamoros","America/Menominee","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Rainy_River","America/Rankin_Inlet","America/Resolute","America/Winnipeg","CST6CDT"]},{value:"Central Standard Time (Mexico)",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Guadalajara, Mexico City, Monterrey",utc:["America/Bahia_Banderas","America/Cancun","America/Merida","America/Mexico_City","America/Monterrey"]},{value:"Canada Central Standard Time",abbr:"CCST",offset:-6,isdst:!1,text:"(UTC-06:00) Saskatchewan",utc:["America/Regina","America/Swift_Current"]},{value:"SA Pacific Standard Time",abbr:"SPST",offset:-5,isdst:!1,text:"(UTC-05:00) Bogota, Lima, Quito",utc:["America/Bogota","America/Cayman","America/Coral_Harbour","America/Eirunepe","America/Guayaquil","America/Jamaica","America/Lima","America/Panama","America/Rio_Branco","Etc/GMT+5"]},{value:"Eastern Standard Time",abbr:"EST",offset:-5,isdst:!1,text:"(UTC-05:00) Eastern Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto"]},{value:"Eastern Daylight Time",abbr:"EDT",offset:-4,isdst:!0,text:"(UTC-04:00) Eastern Daylight Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto"]},{value:"US Eastern Standard Time",abbr:"UEDT",offset:-5,isdst:!1,text:"(UTC-05:00) Indiana (East)",utc:["America/Indiana/Marengo","America/Indiana/Vevay","America/Indianapolis"]},{value:"Venezuela Standard Time",abbr:"VST",offset:-4.5,isdst:!1,text:"(UTC-04:30) Caracas",utc:["America/Caracas"]},{value:"Paraguay Standard Time",abbr:"PYT",offset:-4,isdst:!1,text:"(UTC-04:00) Asuncion",utc:["America/Asuncion"]},{value:"Atlantic Standard Time",abbr:"ADT",offset:-3,isdst:!0,text:"(UTC-04:00) Atlantic Time (Canada)",utc:["America/Glace_Bay","America/Goose_Bay","America/Halifax","America/Moncton","America/Thule","Atlantic/Bermuda"]},{value:"Central Brazilian Standard Time",abbr:"CBST",offset:-4,isdst:!1,text:"(UTC-04:00) Cuiaba",utc:["America/Campo_Grande","America/Cuiaba"]},{value:"SA Western Standard Time",abbr:"SWST",offset:-4,isdst:!1,text:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",utc:["America/Anguilla","America/Antigua","America/Aruba","America/Barbados","America/Blanc-Sablon","America/Boa_Vista","America/Curacao","America/Dominica","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guyana","America/Kralendijk","America/La_Paz","America/Lower_Princes","America/Manaus","America/Marigot","America/Martinique","America/Montserrat","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Santo_Domingo","America/St_Barthelemy","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Tortola","Etc/GMT+4"]},{value:"Pacific SA Standard Time",abbr:"PSST",offset:-4,isdst:!1,text:"(UTC-04:00) Santiago",utc:["America/Santiago","Antarctica/Palmer"]},{value:"Newfoundland Standard Time",abbr:"NDT",offset:-2.5,isdst:!0,text:"(UTC-03:30) Newfoundland",utc:["America/St_Johns"]},{value:"E. South America Standard Time",abbr:"ESAST",offset:-3,isdst:!1,text:"(UTC-03:00) Brasilia",utc:["America/Sao_Paulo"]},{value:"Argentina Standard Time",abbr:"AST",offset:-3,isdst:!1,text:"(UTC-03:00) Buenos Aires",utc:["America/Argentina/La_Rioja","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Buenos_Aires","America/Catamarca","America/Cordoba","America/Jujuy","America/Mendoza"]},{value:"SA Eastern Standard Time",abbr:"SEST",offset:-3,isdst:!1,text:"(UTC-03:00) Cayenne, Fortaleza",utc:["America/Araguaina","America/Belem","America/Cayenne","America/Fortaleza","America/Maceio","America/Paramaribo","America/Recife","America/Santarem","Antarctica/Rothera","Atlantic/Stanley","Etc/GMT+3"]},{value:"Greenland Standard Time",abbr:"GDT",offset:-3,isdst:!0,text:"(UTC-03:00) Greenland",utc:["America/Godthab"]},{value:"Montevideo Standard Time",abbr:"MST",offset:-3,isdst:!1,text:"(UTC-03:00) Montevideo",utc:["America/Montevideo"]},{value:"Bahia Standard Time",abbr:"BST",offset:-3,isdst:!1,text:"(UTC-03:00) Salvador",utc:["America/Bahia"]},{value:"UTC-02",abbr:"U",offset:-2,isdst:!1,text:"(UTC-02:00) Coordinated Universal Time-02",utc:["America/Noronha","Atlantic/South_Georgia","Etc/GMT+2"]},{value:"Mid-Atlantic Standard Time",abbr:"MDT",offset:-1,isdst:!0,text:"(UTC-02:00) Mid-Atlantic - Old",utc:[]},{value:"Azores Standard Time",abbr:"ADT",offset:0,isdst:!0,text:"(UTC-01:00) Azores",utc:["America/Scoresbysund","Atlantic/Azores"]},{value:"Cape Verde Standard Time",abbr:"CVST",offset:-1,isdst:!1,text:"(UTC-01:00) Cape Verde Is.",utc:["Atlantic/Cape_Verde","Etc/GMT+1"]},{value:"Morocco Standard Time",abbr:"MDT",offset:1,isdst:!0,text:"(UTC) Casablanca",utc:["Africa/Casablanca","Africa/El_Aaiun"]},{value:"UTC",abbr:"UTC",offset:0,isdst:!1,text:"(UTC) Coordinated Universal Time",utc:["America/Danmarkshavn","Etc/GMT"]},{value:"GMT Standard Time",abbr:"GMT",offset:0,isdst:!1,text:"(UTC) Edinburgh, London",utc:["Europe/Isle_of_Man","Europe/Guernsey","Europe/Jersey","Europe/London"]},{value:"British Summer Time",abbr:"BST",offset:1,isdst:!0,text:"(UTC+01:00) Edinburgh, London",utc:["Europe/Isle_of_Man","Europe/Guernsey","Europe/Jersey","Europe/London"]},{value:"GMT Standard Time",abbr:"GDT",offset:1,isdst:!0,text:"(UTC) Dublin, Lisbon",utc:["Atlantic/Canary","Atlantic/Faeroe","Atlantic/Madeira","Europe/Dublin","Europe/Lisbon"]},{value:"Greenwich Standard Time",abbr:"GST",offset:0,isdst:!1,text:"(UTC) Monrovia, Reykjavik",utc:["Africa/Abidjan","Africa/Accra","Africa/Bamako","Africa/Banjul","Africa/Bissau","Africa/Conakry","Africa/Dakar","Africa/Freetown","Africa/Lome","Africa/Monrovia","Africa/Nouakchott","Africa/Ouagadougou","Africa/Sao_Tome","Atlantic/Reykjavik","Atlantic/St_Helena"]},{value:"W. Europe Standard Time",abbr:"WEDT",offset:2,isdst:!0,text:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",utc:["Arctic/Longyearbyen","Europe/Amsterdam","Europe/Andorra","Europe/Berlin","Europe/Busingen","Europe/Gibraltar","Europe/Luxembourg","Europe/Malta","Europe/Monaco","Europe/Oslo","Europe/Rome","Europe/San_Marino","Europe/Stockholm","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Zurich"]},{value:"Central Europe Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",utc:["Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Podgorica","Europe/Prague","Europe/Tirane"]},{value:"Romance Standard Time",abbr:"RDT",offset:2,isdst:!0,text:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",utc:["Africa/Ceuta","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris"]},{value:"Central European Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",utc:["Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb"]},{value:"W. Central Africa Standard Time",abbr:"WCAST",offset:1,isdst:!1,text:"(UTC+01:00) West Central Africa",utc:["Africa/Algiers","Africa/Bangui","Africa/Brazzaville","Africa/Douala","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Luanda","Africa/Malabo","Africa/Ndjamena","Africa/Niamey","Africa/Porto-Novo","Africa/Tunis","Etc/GMT-1"]},{value:"Namibia Standard Time",abbr:"NST",offset:1,isdst:!1,text:"(UTC+01:00) Windhoek",utc:["Africa/Windhoek"]},{value:"GTB Standard Time",abbr:"GDT",offset:3,isdst:!0,text:"(UTC+02:00) Athens, Bucharest",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau"]},{value:"Middle East Standard Time",abbr:"MEDT",offset:3,isdst:!0,text:"(UTC+02:00) Beirut",utc:["Asia/Beirut"]},{value:"Egypt Standard Time",abbr:"EST",offset:2,isdst:!1,text:"(UTC+02:00) Cairo",utc:["Africa/Cairo"]},{value:"Syria Standard Time",abbr:"SDT",offset:3,isdst:!0,text:"(UTC+02:00) Damascus",utc:["Asia/Damascus"]},{value:"E. Europe Standard Time",abbr:"EEDT",offset:3,isdst:!0,text:"(UTC+02:00) E. Europe",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau","Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Nicosia","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{value:"South Africa Standard Time",abbr:"SAST",offset:2,isdst:!1,text:"(UTC+02:00) Harare, Pretoria",utc:["Africa/Blantyre","Africa/Bujumbura","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Kigali","Africa/Lubumbashi","Africa/Lusaka","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Etc/GMT-2"]},{value:"FLE Standard Time",abbr:"FDT",offset:3,isdst:!0,text:"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",utc:["Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{value:"Turkey Standard Time",abbr:"TDT",offset:3,isdst:!1,text:"(UTC+03:00) Istanbul",utc:["Europe/Istanbul"]},{value:"Israel Standard Time",abbr:"JDT",offset:3,isdst:!0,text:"(UTC+02:00) Jerusalem",utc:["Asia/Jerusalem"]},{value:"Libya Standard Time",abbr:"LST",offset:2,isdst:!1,text:"(UTC+02:00) Tripoli",utc:["Africa/Tripoli"]},{value:"Jordan Standard Time",abbr:"JST",offset:3,isdst:!1,text:"(UTC+03:00) Amman",utc:["Asia/Amman"]},{value:"Arabic Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Baghdad",utc:["Asia/Baghdad"]},{value:"Kaliningrad Standard Time",abbr:"KST",offset:3,isdst:!1,text:"(UTC+02:00) Kaliningrad",utc:["Europe/Kaliningrad"]},{value:"Arab Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Kuwait, Riyadh",utc:["Asia/Aden","Asia/Bahrain","Asia/Kuwait","Asia/Qatar","Asia/Riyadh"]},{value:"E. Africa Standard Time",abbr:"EAST",offset:3,isdst:!1,text:"(UTC+03:00) Nairobi",utc:["Africa/Addis_Ababa","Africa/Asmera","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Mogadishu","Africa/Nairobi","Antarctica/Syowa","Etc/GMT-3","Indian/Antananarivo","Indian/Comoro","Indian/Mayotte"]},{value:"Moscow Standard Time",abbr:"MSK",offset:3,isdst:!1,text:"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk",utc:["Europe/Kirov","Europe/Moscow","Europe/Simferopol","Europe/Volgograd","Europe/Minsk"]},{value:"Samara Time",abbr:"SAMT",offset:4,isdst:!1,text:"(UTC+04:00) Samara, Ulyanovsk, Saratov",utc:["Europe/Astrakhan","Europe/Samara","Europe/Ulyanovsk"]},{value:"Iran Standard Time",abbr:"IDT",offset:4.5,isdst:!0,text:"(UTC+03:30) Tehran",utc:["Asia/Tehran"]},{value:"Arabian Standard Time",abbr:"AST",offset:4,isdst:!1,text:"(UTC+04:00) Abu Dhabi, Muscat",utc:["Asia/Dubai","Asia/Muscat","Etc/GMT-4"]},{value:"Azerbaijan Standard Time",abbr:"ADT",offset:5,isdst:!0,text:"(UTC+04:00) Baku",utc:["Asia/Baku"]},{value:"Mauritius Standard Time",abbr:"MST",offset:4,isdst:!1,text:"(UTC+04:00) Port Louis",utc:["Indian/Mahe","Indian/Mauritius","Indian/Reunion"]},{value:"Georgian Standard Time",abbr:"GET",offset:4,isdst:!1,text:"(UTC+04:00) Tbilisi",utc:["Asia/Tbilisi"]},{value:"Caucasus Standard Time",abbr:"CST",offset:4,isdst:!1,text:"(UTC+04:00) Yerevan",utc:["Asia/Yerevan"]},{value:"Afghanistan Standard Time",abbr:"AST",offset:4.5,isdst:!1,text:"(UTC+04:30) Kabul",utc:["Asia/Kabul"]},{value:"West Asia Standard Time",abbr:"WAST",offset:5,isdst:!1,text:"(UTC+05:00) Ashgabat, Tashkent",utc:["Antarctica/Mawson","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Dushanbe","Asia/Oral","Asia/Samarkand","Asia/Tashkent","Etc/GMT-5","Indian/Kerguelen","Indian/Maldives"]},{value:"Yekaterinburg Time",abbr:"YEKT",offset:5,isdst:!1,text:"(UTC+05:00) Yekaterinburg",utc:["Asia/Yekaterinburg"]},{value:"Pakistan Standard Time",abbr:"PKT",offset:5,isdst:!1,text:"(UTC+05:00) Islamabad, Karachi",utc:["Asia/Karachi"]},{value:"India Standard Time",abbr:"IST",offset:5.5,isdst:!1,text:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",utc:["Asia/Kolkata","Asia/Calcutta"]},{value:"Sri Lanka Standard Time",abbr:"SLST",offset:5.5,isdst:!1,text:"(UTC+05:30) Sri Jayawardenepura",utc:["Asia/Colombo"]},{value:"Nepal Standard Time",abbr:"NST",offset:5.75,isdst:!1,text:"(UTC+05:45) Kathmandu",utc:["Asia/Kathmandu"]},{value:"Central Asia Standard Time",abbr:"CAST",offset:6,isdst:!1,text:"(UTC+06:00) Nur-Sultan (Astana)",utc:["Antarctica/Vostok","Asia/Almaty","Asia/Bishkek","Asia/Qyzylorda","Asia/Urumqi","Etc/GMT-6","Indian/Chagos"]},{value:"Bangladesh Standard Time",abbr:"BST",offset:6,isdst:!1,text:"(UTC+06:00) Dhaka",utc:["Asia/Dhaka","Asia/Thimphu"]},{value:"Myanmar Standard Time",abbr:"MST",offset:6.5,isdst:!1,text:"(UTC+06:30) Yangon (Rangoon)",utc:["Asia/Rangoon","Indian/Cocos"]},{value:"SE Asia Standard Time",abbr:"SAST",offset:7,isdst:!1,text:"(UTC+07:00) Bangkok, Hanoi, Jakarta",utc:["Antarctica/Davis","Asia/Bangkok","Asia/Hovd","Asia/Jakarta","Asia/Phnom_Penh","Asia/Pontianak","Asia/Saigon","Asia/Vientiane","Etc/GMT-7","Indian/Christmas"]},{value:"N. Central Asia Standard Time",abbr:"NCAST",offset:7,isdst:!1,text:"(UTC+07:00) Novosibirsk",utc:["Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk"]},{value:"China Standard Time",abbr:"CST",offset:8,isdst:!1,text:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",utc:["Asia/Hong_Kong","Asia/Macau","Asia/Shanghai"]},{value:"North Asia Standard Time",abbr:"NAST",offset:8,isdst:!1,text:"(UTC+08:00) Krasnoyarsk",utc:["Asia/Krasnoyarsk"]},{value:"Singapore Standard Time",abbr:"MPST",offset:8,isdst:!1,text:"(UTC+08:00) Kuala Lumpur, Singapore",utc:["Asia/Brunei","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Makassar","Asia/Manila","Asia/Singapore","Etc/GMT-8"]},{value:"W. Australia Standard Time",abbr:"WAST",offset:8,isdst:!1,text:"(UTC+08:00) Perth",utc:["Antarctica/Casey","Australia/Perth"]},{value:"Taipei Standard Time",abbr:"TST",offset:8,isdst:!1,text:"(UTC+08:00) Taipei",utc:["Asia/Taipei"]},{value:"Ulaanbaatar Standard Time",abbr:"UST",offset:8,isdst:!1,text:"(UTC+08:00) Ulaanbaatar",utc:["Asia/Choibalsan","Asia/Ulaanbaatar"]},{value:"North Asia East Standard Time",abbr:"NAEST",offset:8,isdst:!1,text:"(UTC+08:00) Irkutsk",utc:["Asia/Irkutsk"]},{value:"Japan Standard Time",abbr:"JST",offset:9,isdst:!1,text:"(UTC+09:00) Osaka, Sapporo, Tokyo",utc:["Asia/Dili","Asia/Jayapura","Asia/Tokyo","Etc/GMT-9","Pacific/Palau"]},{value:"Korea Standard Time",abbr:"KST",offset:9,isdst:!1,text:"(UTC+09:00) Seoul",utc:["Asia/Pyongyang","Asia/Seoul"]},{value:"Cen. Australia Standard Time",abbr:"CAST",offset:9.5,isdst:!1,text:"(UTC+09:30) Adelaide",utc:["Australia/Adelaide","Australia/Broken_Hill"]},{value:"AUS Central Standard Time",abbr:"ACST",offset:9.5,isdst:!1,text:"(UTC+09:30) Darwin",utc:["Australia/Darwin"]},{value:"E. Australia Standard Time",abbr:"EAST",offset:10,isdst:!1,text:"(UTC+10:00) Brisbane",utc:["Australia/Brisbane","Australia/Lindeman"]},{value:"AUS Eastern Standard Time",abbr:"AEST",offset:10,isdst:!1,text:"(UTC+10:00) Canberra, Melbourne, Sydney",utc:["Australia/Melbourne","Australia/Sydney"]},{value:"West Pacific Standard Time",abbr:"WPST",offset:10,isdst:!1,text:"(UTC+10:00) Guam, Port Moresby",utc:["Antarctica/DumontDUrville","Etc/GMT-10","Pacific/Guam","Pacific/Port_Moresby","Pacific/Saipan","Pacific/Truk"]},{value:"Tasmania Standard Time",abbr:"TST",offset:10,isdst:!1,text:"(UTC+10:00) Hobart",utc:["Australia/Currie","Australia/Hobart"]},{value:"Yakutsk Standard Time",abbr:"YST",offset:9,isdst:!1,text:"(UTC+09:00) Yakutsk",utc:["Asia/Chita","Asia/Khandyga","Asia/Yakutsk"]},{value:"Central Pacific Standard Time",abbr:"CPST",offset:11,isdst:!1,text:"(UTC+11:00) Solomon Is., New Caledonia",utc:["Antarctica/Macquarie","Etc/GMT-11","Pacific/Efate","Pacific/Guadalcanal","Pacific/Kosrae","Pacific/Noumea","Pacific/Ponape"]},{value:"Vladivostok Standard Time",abbr:"VST",offset:11,isdst:!1,text:"(UTC+11:00) Vladivostok",utc:["Asia/Sakhalin","Asia/Ust-Nera","Asia/Vladivostok"]},{value:"New Zealand Standard Time",abbr:"NZST",offset:12,isdst:!1,text:"(UTC+12:00) Auckland, Wellington",utc:["Antarctica/McMurdo","Pacific/Auckland"]},{value:"UTC+12",abbr:"U",offset:12,isdst:!1,text:"(UTC+12:00) Coordinated Universal Time+12",utc:["Etc/GMT-12","Pacific/Funafuti","Pacific/Kwajalein","Pacific/Majuro","Pacific/Nauru","Pacific/Tarawa","Pacific/Wake","Pacific/Wallis"]},{value:"Fiji Standard Time",abbr:"FST",offset:12,isdst:!1,text:"(UTC+12:00) Fiji",utc:["Pacific/Fiji"]},{value:"Magadan Standard Time",abbr:"MST",offset:12,isdst:!1,text:"(UTC+12:00) Magadan",utc:["Asia/Anadyr","Asia/Kamchatka","Asia/Magadan","Asia/Srednekolymsk"]},{value:"Kamchatka Standard Time",abbr:"KDT",offset:13,isdst:!0,text:"(UTC+12:00) Petropavlovsk-Kamchatsky - Old",utc:["Asia/Kamchatka"]},{value:"Tonga Standard Time",abbr:"TST",offset:13,isdst:!1,text:"(UTC+13:00) Nuku'alofa",utc:["Etc/GMT-13","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Tongatapu"]},{value:"Samoa Standard Time",abbr:"SST",offset:13,isdst:!1,text:"(UTC+13:00) Samoa",utc:["Pacific/Apia"]}]},9841:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.validUpdateUserKeys=t.validLoginKeys=t.validRegisterKeys=void 0;const r=i(a(9153));t.validRegisterKeys=Object.keys(r.default.schema.obj),t.validLoginKeys=["email","password"],t.validUpdateUserKeys=["name","email","timezoneGMT"]},1476:(e,t)=>{let a,i,r,o;Object.defineProperty(t,"__esModule",{value:!0}),t.getQueueScheduler=t.setQueueScheduler=t.getQueueWorker=t.setQueueWorker=t.getRepeatOptions=t.setRepeatOptions=t.getQueue=t.setQueue=t.jobBaseName=t.queueBaseName=void 0,t.queueBaseName="pingApiScheduleQueue",t.jobBaseName="pingApisJob",t.setQueue=async function(e){a=e},t.getQueue=async function(){return a},t.setRepeatOptions=function(e){i=e},t.getRepeatOptions=async function(){return i},t.setQueueWorker=async function(e){r=e},t.getQueueWorker=async function(){return r},t.setQueueScheduler=function(e){o=e},t.getQueueScheduler=async function(){return o}},3217:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.showStats=t.getApi=t.updateApi=t.getAllApis=t.deleteApi=t.createApi=void 0;const r=a(5994),o=a(6658),n=a(5213),s=a(8037),u=a(8010),d=i(a(5445)),l=i(a(9621)),c=a(6170),f=i(a(246)),p=a(6866);t.createApi=async(e,t)=>{const a=await(0,f.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");if(!(0,p.validKeys)(t,Object.keys(e.body),"Invalid API creation, can only input: ",o.validCreateApiKeys))return;e.body.createdBy=a._id;const i=new d.default(e.body);await i.validate(),await d.default.create(i),t.status(u.StatusCodes.CREATED).json(i)},t.getAllApis=async(e,t)=>{const a=await(0,f.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");if(!(0,p.validKeys)(t,Object.keys(e.query),"Invalid search params, can only use: ",o.validApiSearchParams))return;const{host:i,status:r,monitoring:l,sort:c,search:m,page:A,limit:v}=e.query,T={createdBy:a._id};i&&"All"!==i&&(T.host=i),r&&"All"!==r&&(T.status=r),l&&"All"!==l&&(T.monitoring=l),m&&(T.url={$regex:m,$options:"i"});let S=d.default.find(T),b={url:-1};c===n.ApiSortOptions.LATEST&&(b={createdAt:-1}),c===n.ApiSortOptions.OLDEST&&(b={createdAt:1}),c===n.ApiSortOptions.A_Z&&(b={url:1}),c===n.ApiSortOptions.Z_A&&(b={url:-1}),S=S.sort(b);const M=Number(A)||1,g=Number(v)||10,h=(M-1)*g;S=S.skip(h).limit(g);const y=await S,O=y.length,E=Math.ceil(O/g);t.status(u.StatusCodes.OK).json({allApis:y,totalApis:O,numOfPages:E})},t.updateApi=async(e,t)=>{const a=await(0,f.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");const{id:i}=e.params;if(!i)return void(0,s.badRequestError)(t,"Please provide API id");if(!(0,p.validKeys)(t,Object.keys(e.body),"Error updating API, can only use: ",o.validUpdateApiKeys))return;const r=await d.default.findOne({_id:i});r?((0,l.default)(t,a._id,r.createdBy),Object.assign(r,e.body),await r.validate(),await r.save(),t.status(u.StatusCodes.OK).json(r)):(0,s.notFoundError)(t,`No API with id: ${i}`)},t.deleteApi=async(e,t)=>{const a=await(0,f.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");const{id:i}=e.params;if(!i)return void(0,s.badRequestError)(t,"Please provide API id");const o=await d.default.findOne({_id:i});o?((0,l.default)(t,a._id,o.createdBy),await o.remove(),t.status(u.StatusCodes.OK).json(r.deleteApiSuccessMsg)):(0,s.notFoundError)(t,`No API with id: ${i}`)},t.getApi=async(e,t)=>{const a=await(0,f.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");const{id:i}=e.params;if(!i)return void(0,s.badRequestError)(t,"Please provide API id");const r=await d.default.findOne({_id:i});r?((0,l.default)(t,a._id,r.createdBy),t.status(u.StatusCodes.OK).json(r)):(0,s.notFoundError)(t,`No API with id: ${i}`)};let m=[{date:"",count:0}];t.showStats=async(e,t)=>{const a=await(0,f.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");const i=a._id,r=(await d.default.aggregate([{$match:{createdBy:i}},{$group:{_id:"$status",count:{$sum:1}}}])).reduce(((e,t)=>{const{_id:a,count:i}=t;return e[a]=i,e}),{}),o={healthy:r.healthy||0,unhealthy:r.unhealthy||0,pending:r.pending||0},n=await d.default.aggregate([{$match:{createdBy:i}},{$group:{_id:{year:{$year:"$createdAt"},month:{$month:"$createdAt"}},count:{$sum:1}}},{$sort:{"_id.year":-1,"_id.month":-1}},{$limit:6}]);n.length>0&&(m=n.map((e=>{const{_id:{year:t,month:a},count:i}=e;let r=(0,c.formatCurrentMonthYear)(t,a);return r=(0,c.formatCurrentMonthYear)(t,a-1),{date:r,count:i}})).reverse()),t.status(u.StatusCodes.OK).json({defaultStats:o,monthlyApis:m})}},9014:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getAuthUser=t.updateUser=t.login=t.register=void 0;const r=a(5975),o=a(5447),n=a(9841),s=a(8037),u=a(8010),d=i(a(9153)),l=i(a(246)),c=a(6866);t.register=async(e,t)=>{if(!(0,c.validKeys)(t,Object.keys(e.body),"Invalid register, can only input: ",n.validRegisterKeys))return;const{email:a}=e.body;if(await d.default.findOne({email:a}))return void(0,s.badRequestError)(t,"Please use a different email");const i=new d.default(e.body);await i.validate(),await d.default.create(i);const l=i.createJWT(o.JWT_ACCESS_TOKEN_LIFETIME);t.cookie(r.cookieName,l,{maxAge:r.cookieExpiryTime,secure:r.cookieSecureSetting,httpOnly:r.cookieHttpOnlySetting,sameSite:r.cookieSameSiteSetting}).status(u.StatusCodes.CREATED).json({user:{id:i._id,email:i.email,name:i.name,timezoneGMT:i.timezoneGMT},accessToken:l})},t.login=async(e,t)=>{if(!(0,c.validKeys)(t,Object.keys(e.body),"Invalid login, can only input: ",n.validLoginKeys))return;const{email:a,password:i}=e.body,l=await d.default.findOne({email:a}).select("+password");if(!l)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");if(!await l.comparePassword(i,l.password))return void(0,s.unAuthenticatedError)(t,"Incorrect Credentials");const f=l.createJWT(o.JWT_ACCESS_TOKEN_LIFETIME);l.password="",t.cookie(r.cookieName,f,{maxAge:r.cookieExpiryTime,secure:r.cookieSecureSetting,httpOnly:r.cookieHttpOnlySetting,sameSite:r.cookieSameSiteSetting}).status(u.StatusCodes.OK).json({user:{id:l._id,email:l.email,name:l.name,timezoneGMT:l.timezoneGMT},accessToken:f})},t.updateUser=async(e,t)=>{const a=await(0,l.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");if(!(0,c.validKeys)(t,Object.keys(e.body),"Invalid update profile, can only input: ",n.validUpdateUserKeys))return;const{email:i}=e.body;if(i&&a.email!==i&&await d.default.findOne({email:i}))return void(0,s.badRequestError)(t,"Please use a different email");Object.assign(a,e.body),await a.validate(),await a.save(),a.password="";const f=a.createJWT(o.JWT_ACCESS_TOKEN_LIFETIME);t.cookie(r.cookieName,f,{maxAge:r.cookieExpiryTime,secure:r.cookieSecureSetting,httpOnly:r.cookieHttpOnlySetting,sameSite:r.cookieSameSiteSetting}).status(u.StatusCodes.OK).json({user:{id:a._id,email:a.email,name:a.name,timezoneGMT:a.timezoneGMT},accessToken:f})},t.getAuthUser=async(e,t)=>{const a=await(0,l.default)(e,t);a?t.status(u.StatusCodes.OK).json({id:a._id,name:a.name,email:a.email,timezoneGMT:a.timezoneGMT}):(0,s.unAuthenticatedError)(t,"User not found!")}},1885:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.updateMonitor=t.getMonitor=t.deleteMonitor=t.createMonitor=void 0;const r=a(5994),o=a(3367),n=a(8801),s=a(8037),u=a(8010),d=i(a(8933)),l=i(a(246)),c=a(6866);t.createMonitor=async(e,t)=>{try{const a=await(0,l.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");if(await d.default.findOne({createdBy:a._id}))return void(0,s.badRequestError)(t,"Error, can only have one monitor, please turn off to remove");if(!(0,c.validKeys)(t,Object.keys(e.body),"Invalid monitor input, can only input: ",o.validCreateMonitorKeys))return;const{monitorSetting:i}=e.body;if(i!==n.MonitorSettingOptions.ON)return void(0,s.badRequestError)(t,"Monitor setting must be on to add monitor");e.body.createdBy=a._id;const r=new d.default(e.body);await r.validate(),await d.default.create(r),t.status(u.StatusCodes.CREATED).json(r)}catch(e){return void(0,s.badRequestError)(t,e)}},t.getMonitor=async(e,t)=>{try{const a=await(0,l.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");const i=await d.default.findOne({createdBy:a._id});if(i)t.status(u.StatusCodes.OK).json(i);else{const e={monitorSetting:n.MonitorSettingOptions.OFF,scheduleType:n.MonitorScheduleTypeOptions.INTERVAL,intervalSchedule:n.MonitorIntervalScheduleOptions.WEEKLY,dateDayOfWeek:o.validMonitorDateDayOfWeekOptions[0],dateHour:o.validMonitorDateHourOptions[0],dateMinute:o.validMonitorDateMinuteOptions[0],dateAMOrPM:n.MonitorDateAMOrPMOptions.AM};t.status(u.StatusCodes.OK).json(e)}}catch(e){return void(0,s.badRequestError)(t,e)}},t.updateMonitor=async(e,t)=>{try{const a=await(0,l.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");const i=await d.default.findOne({createdBy:a._id});if(!i)return void(0,s.notFoundError)(t,"No monitor found");if(!(0,c.validKeys)(t,Object.keys(e.body),"Error updating monitor, can only use: ",o.validUpdateMonitorKeys))return;Object.assign(i,e.body),await i.validate(),await i.save(),t.status(u.StatusCodes.OK).json(i)}catch(e){return void(0,s.badRequestError)(t,e)}},t.deleteMonitor=async(e,t)=>{const a=await(0,l.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");const i=await d.default.findOne({createdBy:a._id});i?i.monitorSetting!==n.MonitorSettingOptions.ON?(await i.remove(),t.status(u.StatusCodes.OK).json(r.deleteMonitorSuccessMsg)):(0,s.badRequestError)(t,"Monitor setting must be off to remove monitor"):(0,s.notFoundError)(t,"Error, no monitor found")}},7007:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.pingOne=t.pingAll=void 0;const r=i(a(2167)),o=a(5994),n=a(5213),s=a(8037),u=a(8010),d=i(a(5445)),l=i(a(9621)),c=a(6170),f=i(a(246));t.pingAll=async(e,t)=>{const a=await(0,f.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");const i=await d.default.find({createdBy:a._id});i&&i.length>0?(Object.keys(i).forEach((async(e,t)=>{const o=i[t];r.default.get(o.url).then((()=>{o.status=n.ApiStatusOptions.HEALTHY,o.lastPinged=(0,c.getDateWithUTCOffset)(a.timezoneGMT),o.save()})).catch((()=>{o.status=n.ApiStatusOptions.UNHEALTHY,o.lastPinged=(0,c.getDateWithUTCOffset)(a.timezoneGMT),o.save()}))})),t.status(u.StatusCodes.OK).json(o.pingAllApisSuccessMsg)):(0,s.notFoundError)(t,"No APIs found")},t.pingOne=async(e,t)=>{const a=await(0,f.default)(e,t);if(!a)return void(0,s.unAuthenticatedError)(t,"Invalid Credentials");const{id:i}=e.params,p=await d.default.findOne({_id:i});if(p){(0,l.default)(t,a._id,p.createdBy);try{await r.default.get(p.url),p.status=n.ApiStatusOptions.HEALTHY,p.lastPinged=(0,c.getDateWithUTCOffset)(a.timezoneGMT),await p.save()}catch(e){p.status=n.ApiStatusOptions.UNHEALTHY,p.lastPinged=(0,c.getDateWithUTCOffset)(a.timezoneGMT),await p.save()}t.status(u.StatusCodes.OK).json(o.pingOneApiSuccessMsg)}else(0,s.notFoundError)(t,`No API with id: ${i}`)}},1089:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.removeQueue=t.startQueue=void 0;const r=i(a(2167)),o=a(7807),n=a(5447),s=a(1476),u=i(a(5841)),d=a(5213),l=a(8801),c=a(8037),f=a(8010),p=i(a(5445)),m=i(a(8933)),A=a(6170),v=a(4978),T=i(a(246));t.startQueue=async(e,t)=>{const a=await(0,T.default)(e,t);if(!a)return void(0,c.unAuthenticatedError)(t,"Invalid Credentials");const i=await(0,u.default)(),S=`${s.queueBaseName}-${a.email}`,b=`${s.jobBaseName}-${a.email}`,M=await m.default.findOne({createdBy:a._id});if(!M)return void(0,c.notFoundError)(t,"No monitor found");if(M.monitorSetting!==l.MonitorSettingOptions.ON)return void(0,c.badRequestError)(t,"Monitor must be on to start queue");const{scheduleType:g,intervalSchedule:h,dateDayOfWeek:y,dateHour:O,dateMinute:E,dateAMOrPM:_}=M;if(g===l.MonitorScheduleTypeOptions.DATE){let e=O;12===O&&_===l.MonitorDateAMOrPMOptions.AM&&(e=O-12),12!==O&&_===l.MonitorDateAMOrPMOptions.PM&&(e=O+12),12===O&&_===l.MonitorDateAMOrPMOptions.PM&&(e=O);const t=await(0,v.getCronUTCTime)({timezone:a.timezoneGMT,inputDay:y,inputHour:e,inputMinute:E});(0,s.setRepeatOptions)({pattern:n.PROD_ENV?t:`* ${E} ${e} * * ${y}`,limit:2})}if(g===l.MonitorScheduleTypeOptions.INTERVAL)switch(h){case l.MonitorIntervalScheduleOptions.WEEKLY:(0,s.setRepeatOptions)({every:6048e5,limit:2});break;case l.MonitorIntervalScheduleOptions.DAILY:(0,s.setRepeatOptions)({every:864e5,limit:2});break;case l.MonitorIntervalScheduleOptions.HOURLY:(0,s.setRepeatOptions)({every:36e5,limit:2});break;case l.MonitorIntervalScheduleOptions.MINUTES:(0,s.setRepeatOptions)({every:6e4,limit:2});break;default:(0,s.setRepeatOptions)({every:864e5,limit:2})}(0,s.setQueue)(new o.Queue(S,i));const C=await(0,s.getQueue)(),U=await(0,s.getRepeatOptions)();async function D(e){console.log(e),await C.add(b,{jobDetails:e},{repeat:U})}(0,s.setQueueScheduler)(new o.QueueScheduler(S,{connection:i.connection.duplicate()}));const P=await p.default.find({createdBy:a._id,monitoring:d.ApiMonitoringOptions.ON});if(!(P&&P.length>0))return void(0,c.notFoundError)(t,"No APIs found");if(g===l.MonitorScheduleTypeOptions.INTERVAL&&D(`Ping apis for user at ${h}`),g===l.MonitorScheduleTypeOptions.DATE){const e=E<10?`0${E}`:E;D(`Ping apis for user at ${l.MonitorDateDayOfWeekOptions[y]} ${O}:${e} ${_} (GMT ${a.timezoneGMT})`)}(0,s.setQueueWorker)(new o.Worker(S,(async function(){Object.keys(P).forEach((async(e,t)=>{const i=P[t];r.default.get(i.url).then((()=>{i.status=d.ApiStatusOptions.HEALTHY,i.lastPinged=(0,A.getDateWithUTCOffset)(a.timezoneGMT),i.save()})).catch((()=>{i.status=d.ApiStatusOptions.UNHEALTHY,i.lastPinged=(0,A.getDateWithUTCOffset)(a.timezoneGMT),i.save()}))}))}),i));const k=await(0,s.getQueueWorker)();k.on("completed",(async e=>{n.TEST_ENV||console.log(`Job ${e.id} has completed!`)})),k.on("failed",(async(e,t)=>{n.TEST_ENV||console.error(`Job ${e.id} has failed with ${t.message}`)})),t.status(f.StatusCodes.OK).json({msg:"Started monitoring in queue!"})},t.removeQueue=async(e,t)=>{const a=await(0,T.default)(e,t);if(!a)return void(0,c.unAuthenticatedError)(t,"Invalid Credentials");if(await(0,u.default)(),await m.default.findOne({createdBy:a._id}))return void(0,c.badRequestError)(t,"Monitor must be deleted to stop queue");const i=await(0,s.getQueue)();i?(await i.obliterate(),await i.close(),t.status(f.StatusCodes.OK).json({msg:"Stopped monitoring and removed queue"})):t.status(f.StatusCodes.OK).json({msg:"Monitoring stopped"})}},6744:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(5447),o=i(a(1185));t.default=async e=>{try{r.PROD_ENV||console.log("Connecting to MongoDB with url --------\x3e ",e),await o.default.connect(e)}catch(e){return console.log("Error connecting to MongoDB/Mongoose: ",e),e}}},5841:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(5447),o=i(a(1495));t.default=async()=>({connection:new o.default({host:r.REDIS_HOST,port:parseInt(r.REDIS_PORT),username:r.PROD_ENV?r.REDIS_USERNAME:void 0,password:r.PROD_ENV?r.REDIS_PASSWORD:void 0,maxRetriesPerRequest:null})})},9582:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.seedApiCollection=t.seedUsersCollection=t.resetMonitorCollection=t.resetApiCollection=t.resetUsersCollection=void 0;const r=a(5447),o=a(8037),n=a(1124),s=a(9527),u=i(a(5445)),d=i(a(8933)),l=i(a(9153)),c=i(a(246));t.resetUsersCollection=async(e,t)=>{try{if(!r.TEST_ENV)return void(0,o.badRequestError)(t,"Can only seed db in testing");await l.default.collection.drop(),t.status(200).json({msg:"DB reset!"})}catch(e){return console.log(e),void(0,o.badRequestError)(t,e)}},t.resetApiCollection=async(e,t)=>{try{if(!r.TEST_ENV)return void(0,o.badRequestError)(t,"Can only seed db in testing");await u.default.collection.drop(),t.status(200).json({msg:"DB reset!"})}catch(e){return console.log(e),void(0,o.badRequestError)(t,e)}},t.resetMonitorCollection=async(e,t)=>{try{if(!r.TEST_ENV)return void(0,o.badRequestError)(t,"Can only seed db in testing");await d.default.collection.drop(),t.status(200).json({msg:"DB reset!"})}catch(e){return console.log(e),void(0,o.badRequestError)(t,e)}},t.seedUsersCollection=async(e,t)=>{try{if(!r.TEST_ENV)return void(0,o.badRequestError)(t,"Can only seed db in testing");{const e=new l.default(s.mockUser);await e.validate(),await l.default.create(e),t.status(201).json({msg:"DB seeded!"})}}catch(e){return console.log(e),void(0,o.badRequestError)(t,e)}},t.seedApiCollection=async(e,t)=>{if(r.TEST_ENV)try{const a=await(0,c.default)(e,t);if(!a)return void(0,o.unAuthenticatedError)(t,"Invalid Credentials");const i=n.mockApis.map((e=>Object.assign(Object.assign({},e),{createdBy:a._id})));await u.default.insertMany(i),t.status(200).json({msg:"DB seeded!"})}catch(e){return console.log(e),void(0,o.badRequestError)(t,e)}else(0,o.badRequestError)(t,"Can only seed db in testing")}},5213:(e,t)=>{var a,i,r,o,n;Object.defineProperty(t,"__esModule",{value:!0}),t.ApiQueryParamsEnum=t.ApiStatusOptions=t.ApiSortOptions=t.ApiMonitoringOptions=t.ApiHostOptions=void 0,(n=t.ApiHostOptions||(t.ApiHostOptions={})).AWS="AWS",n.GCP="GCP",n.AZURE="Azure",n.HEROKU="Heroku",n.DIGITALOCEAN="DigitalOcean",n.VERCEL="Vercel",n.NETLIFY="Netlify",n.OTHER="Other",(o=t.ApiMonitoringOptions||(t.ApiMonitoringOptions={})).ON="on",o.OFF="off",(r=t.ApiSortOptions||(t.ApiSortOptions={})).LATEST="Latest",r.OLDEST="Oldest",r.A_Z="A-Z",r.Z_A="Z-A",(i=t.ApiStatusOptions||(t.ApiStatusOptions={})).HEALTHY="healthy",i.UNHEALTHY="unhealthy",i.PENDING="pending",(a=t.ApiQueryParamsEnum||(t.ApiQueryParamsEnum={})).STATUS="status",a.MONITORING="monitoring",a.SORT="sort",a.SEARCH="search",a.PAGE="page",a.LIMIT="limit",a.HOST="host"},8801:(e,t)=>{var a,i,r,o,n;Object.defineProperty(t,"__esModule",{value:!0}),t.MonitorDateDayOfWeekOptions=t.MonitorSettingOptions=t.MonitorDateAMOrPMOptions=t.MonitorScheduleTypeOptions=t.MonitorIntervalScheduleOptions=void 0,(n=t.MonitorIntervalScheduleOptions||(t.MonitorIntervalScheduleOptions={})).WEEKLY="weekly",n.DAILY="daily",n.HOURLY="hourly",n.MINUTES="minutes",(o=t.MonitorScheduleTypeOptions||(t.MonitorScheduleTypeOptions={})).INTERVAL="Interval",o.DATE="Date",(r=t.MonitorDateAMOrPMOptions||(t.MonitorDateAMOrPMOptions={})).AM="AM",r.PM="PM",(i=t.MonitorSettingOptions||(t.MonitorSettingOptions={})).ON="ON",i.OFF="OFF",(a=t.MonitorDateDayOfWeekOptions||(t.MonitorDateDayOfWeekOptions={}))[a.Sunday=0]="Sunday",a[a.Monday=1]="Monday",a[a.Tuesday=2]="Tuesday",a[a.Wednesday=3]="Wednesday",a[a.Thursday=4]="Thursday",a[a.Friday=5]="Friday",a[a.Saturday=6]="Saturday"},8037:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.notFoundError=t.forbiddenError=t.unAuthenticatedError=t.badRequestError=void 0;const i=a(8010);t.badRequestError=(e,t)=>{e.status(i.StatusCodes.BAD_REQUEST).json({error:`${t}`})},t.unAuthenticatedError=(e,t)=>{e.status(i.StatusCodes.UNAUTHORIZED).json({error:`${t}`})},t.forbiddenError=(e,t)=>{e.status(i.StatusCodes.FORBIDDEN).json({error:`${t}`})},t.notFoundError=(e,t)=>{e.status(i.StatusCodes.NOT_FOUND).json({error:`${t}`})}},5566:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(5975),o=a(8037),n=i(a(9344));t.default=async(e,t,a)=>{const i=e.cookies[r.cookieName];if(i)try{const t=n.default.verify(i,process.env.JWT_SECRET);n.default.verify(i,process.env.JWT_SECRET),e.user={userId:t.userId},a()}catch(e){return void(0,o.unAuthenticatedError)(t,"Error in credentials, please login again")}else(0,o.unAuthenticatedError)(t,"Invalid credentials, please login again")}},1271:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0});const i=a(8010);t.default=(e,t,a,r)=>{const o={statusCode:e.statusCode||i.StatusCodes.INTERNAL_SERVER_ERROR,msg:e.message||"Something went wrong, try again later"};"ValidationError"===e.name&&(o.statusCode=i.StatusCodes.BAD_REQUEST,o.msg=Object.values(e.errors).map((e=>e.message)).join(",")),e.code&&11e3===e.code&&(o.statusCode=i.StatusCodes.BAD_REQUEST,o.msg=`${Object.keys(e.keyValue)} field has to be unique`),a.status(o.statusCode).json({msg:o.msg}),r()}},7223:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=(e,t,a)=>{t.status(404).json({error:"Route does not exist"}),a()}},1785:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.authValidator=void 0;const i=a(4899),r=a(4571),o=a(3553),n=a(6866);t.authValidator=function(e){switch(e){case i.registerUserUrl:return[(0,o.body)("name").isString().isLength({min:1}).withMessage("Please enter a name").isLength({max:30}).withMessage("Please enter a name no more than 30 characters"),(0,o.body)("email").isEmail().withMessage("Please enter a valid email"),(0,o.body)("password").isLength({min:6}).withMessage("Please enter a password at least 6 characters long").isLength({max:255}).withMessage("Please enter a password no more than 255 characters"),(0,o.body)("timezoneGMT").isIn(r.timezoneOffsets).withMessage(`Invalid timezone, must be one of: ${(0,n.validFieldsFormatted)(r.timezoneOffsets)} `).isNumeric()];case i.loginUserUrl:return[(0,o.body)("email").isEmail().withMessage("Please enter a valid email"),(0,o.body)("password").isString().withMessage("Please enter a password")];case i.authUserUrl:return[(0,o.body)("name").optional().isString().isLength({min:1}).withMessage("Please enter a name").isLength({max:30}).withMessage("Please enter a name no more than 30 characters"),(0,o.body)("email").optional().isEmail().withMessage("Please enter a valid email"),(0,o.body)("timezoneGMT").optional().isIn(r.timezoneOffsets).withMessage(`Invalid timezone, must be one of: ${(0,n.validFieldsFormatted)(r.timezoneOffsets)} `).isNumeric()];default:return[]}}},6711:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.monitorValidator=void 0;const i=a(3367),r=a(3553),o=a(6866);t.monitorValidator=function({create:e}){return!0===e?[(0,r.body)("monitorSetting").isIn(i.validMonitorSettingOptions).withMessage(`Invalid monitor setting, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorSettingOptions)} `),(0,r.body)("scheduleType").isIn(i.validMonitorScheduleTypeOptions).withMessage(`Invalid schedule type, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorScheduleTypeOptions)} `),(0,r.body)("intervalSchedule").isIn(i.validMonitorIntervalScheduleOptions).withMessage(`Invalid interval schedule, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorIntervalScheduleOptions)} `),(0,r.body)("dateDayOfWeek").isIn(i.validMonitorDateDayOfWeekOptions).withMessage(`Invalid day of week, must be one of: ${(0,o.validFieldsFormatted)(i.stringDaysOptions)} `),(0,r.body)("dateHour").isIn(i.validMonitorDateHourOptions).withMessage(`Invalid hour, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorDateHourOptions)} `),(0,r.body)("dateMinute").isIn(i.validMonitorDateMinuteOptions).withMessage(`Invalid minute, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorDateMinuteOptions)} `),(0,r.body)("dateAMOrPM").isIn(i.validMonitorDateAMorPMOptions).withMessage(`Invalid AM or PM setting, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorDateAMorPMOptions)} `)]:[(0,r.body)("monitorSetting").optional().isIn(i.validMonitorSettingOptions).withMessage(`Invalid monitor setting, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorSettingOptions)} `),(0,r.body)("scheduleType").optional().isIn(i.validMonitorScheduleTypeOptions).withMessage(`Invalid schedule type, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorScheduleTypeOptions)} `),(0,r.body)("intervalSchedule").optional().isIn(i.validMonitorIntervalScheduleOptions).withMessage(`Invalid interval schedule, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorIntervalScheduleOptions)} `),(0,r.body)("dateDayOfWeek").optional().isIn(i.validMonitorDateDayOfWeekOptions).withMessage(`Invalid day of week, must be one of: ${(0,o.validFieldsFormatted)(i.stringDaysOptions)} `),(0,r.body)("dateHour").optional().isIn(i.validMonitorDateHourOptions).withMessage(`Invalid hour, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorDateHourOptions)} `),(0,r.body)("dateMinute").optional().isIn(i.validMonitorDateMinuteOptions).withMessage(`Invalid minute, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorDateMinuteOptions)} `),(0,r.body)("dateAMOrPM").optional().isIn(i.validMonitorDateAMorPMOptions).withMessage(`Invalid AM or PM setting, must be one of: ${(0,o.validFieldsFormatted)(i.validMonitorDateAMorPMOptions)} `)]}},709:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.validateResult=void 0;const i=a(3553);t.validateResult=function(e,t,a){const r=(0,i.validationResult)(e);if(r.isEmpty())return a();const o=r.array()[0].msg;t.status(400).json({error:o})}},1124:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.mockApis=void 0;const i=a(5213);t.mockApis=[{url:"https://battery-cellify.herokuapp.com/ping",host:i.ApiHostOptions.HEROKU,status:i.ApiStatusOptions.PENDING,lastPinged:"Never pinged",monitoring:i.ApiMonitoringOptions.ON},{url:"https://www.hello-herokuapp2.com/ping",host:i.ApiHostOptions.HEROKU,status:i.ApiStatusOptions.PENDING,lastPinged:"Never pinged",monitoring:i.ApiMonitoringOptions.OFF},{url:"https://www.not1arealwebsitehopefully1.com/ping",host:i.ApiHostOptions.HEROKU,status:i.ApiStatusOptions.PENDING,lastPinged:"Never pinged",monitoring:i.ApiMonitoringOptions.ON},{url:"https://www.not1arealwebsitehopefully2.com/ping",host:i.ApiHostOptions.AWS,status:i.ApiStatusOptions.PENDING,lastPinged:"Never pinged",monitoring:i.ApiMonitoringOptions.ON},{url:"https://www.not1arealwebsitehopefully3.com/ping",host:i.ApiHostOptions.AWS,status:i.ApiStatusOptions.PENDING,lastPinged:"Never pinged",monitoring:i.ApiMonitoringOptions.ON}]},4871:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.mockMonitor=void 0;const i=a(8801);t.mockMonitor={monitorSetting:i.MonitorSettingOptions.OFF,scheduleType:i.MonitorScheduleTypeOptions.INTERVAL,intervalSchedule:i.MonitorIntervalScheduleOptions.HOURLY,dateDayOfWeek:i.MonitorDateDayOfWeekOptions.Sunday,dateHour:1,dateMinute:0,dateAMOrPM:i.MonitorDateAMOrPMOptions.AM}},9527:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.mockUser=void 0,t.mockUser={name:"jane",email:"janedoe1@gmail.com",password:"password",timezoneGMT:-4}},5445:function(e,t,a){var i=this&&this.__createBinding||(Object.create?function(e,t,a,i){void 0===i&&(i=a);var r=Object.getOwnPropertyDescriptor(t,a);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,i,r)}:function(e,t,a,i){void 0===i&&(i=a),e[i]=t[a]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&i(t,e,a);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});const n=a(6658),s=a(5213),u=o(a(1185)),d=new u.default.Schema({url:{type:String,required:[!0,"Please provide API URL"]},host:{type:String,enum:n.validApiHostOptions,default:s.ApiHostOptions.OTHER},status:{type:String,enum:n.validApiStatusOptions,default:s.ApiStatusOptions.PENDING},lastPinged:{type:String,required:[!0,"Please provide last ping date and time"],default:"Never pinged"},monitoring:{type:String,enum:n.validApiMonitoringOptions,default:s.ApiMonitoringOptions.OFF},createdBy:{type:u.Schema.Types.ObjectId,ref:"User",required:[!0,"Please provide user"]}},{timestamps:!0}),l=u.default.model("ApiCollection",d);t.default=l},8933:function(e,t,a){var i=this&&this.__createBinding||(Object.create?function(e,t,a,i){void 0===i&&(i=a);var r=Object.getOwnPropertyDescriptor(t,a);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,i,r)}:function(e,t,a,i){void 0===i&&(i=a),e[i]=t[a]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&i(t,e,a);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});const n=a(3367),s=a(8801),u=o(a(1185)),d=new u.default.Schema({monitorSetting:{type:String,required:[!0,"Please specify if monitor is on or off"],default:s.MonitorSettingOptions.OFF},scheduleType:{type:String,required:[!0,"Please specify schedule type"],default:s.MonitorScheduleTypeOptions.INTERVAL},intervalSchedule:{type:String,enum:n.validMonitorIntervalScheduleOptions,default:s.MonitorIntervalScheduleOptions.WEEKLY},dateDayOfWeek:{type:Number,enum:n.validMonitorDateDayOfWeekOptions,default:s.MonitorDateDayOfWeekOptions.Sunday},dateHour:{type:Number,enum:n.validMonitorDateHourOptions,default:12},dateMinute:{type:Number,enum:n.validMonitorDateMinuteOptions,default:0},dateAMOrPM:{type:String,enum:n.validMonitorDateAMorPMOptions,default:s.MonitorDateAMOrPMOptions.AM},createdBy:{type:u.Schema.Types.ObjectId,ref:"User",required:[!0,"Please provide user"]}},{timestamps:!0}),l=u.default.model("Monitor",d);t.default=l},9153:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=i(a(8432)),o=a(4571),n=i(a(9344)),s=i(a(1185)),u=i(a(1564)),d=new s.default.Schema({name:{type:String,required:[!0,"Please provide name"],minlength:3,maxlength:20,trim:!0},email:{type:String,required:[!0,"Please provide email"],validate:{validator:u.default.isEmail,message:"Please provide a valid email"}},password:{type:String,required:[!0,"Please provide password"],minlength:6,select:!1},timezoneGMT:{type:Number,enum:o.timezoneOffsets,default:0}});d.pre("save",(async function(){if(!this.isModified("password"))return;const e=await r.default.genSalt(10);this.password=await r.default.hash(this.password,e)})),d.methods.createJWT=function(e){return n.default.sign({userId:this._id},process.env.JWT_SECRET,{expiresIn:e})},d.methods.comparePassword=async function(e,t){return await r.default.compare(e,t)};const l=s.default.model("User",d);t.default=l},9316:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(4899),o=a(3217),n=a(7007),s=a(6860),u=i(a(6985)),d=(0,s.Router)();function l(e,t){return(0,u.default)({windowMs:60*e*1e3,max:t,handler:(t,a)=>{a.status(429).json({msg:`Too many requests from this IP, please try again after ${e} minutes`})}})}d.route(`${r.createApiUrl}`).post(l(15,10),o.createApi),d.route(`${r.getAllApisUrl}`).get(o.getAllApis),d.route(`${r.getAllApisStatsUrl}`).get(o.showStats),d.route(`${r.deleteApiUrl}/:id`).delete(o.deleteApi),d.route(`${r.editApiUrl}/:id`).patch(o.updateApi),d.route(`${r.getApiUrl}/:id`).get(o.getApi),d.route(`${r.pingAllApisUrl}`).post(l(15,10),n.pingAll),d.route(`${r.pingOneApiUrl}/:id`).post(l(15,10),n.pingOne),t.default=d},2011:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(4899),o=a(5447),n=a(9014),s=i(a(6860)),u=i(a(6985)),d=i(a(5566)),l=a(1785),c=a(709),f=s.default.Router();function p(e,t){return(0,u.default)({windowMs:60*e*1e3,max:t,handler:(t,a)=>{a.status(429).json({msg:`Too many requests from this IP, please try again after ${e} minutes`})}})}const m=o.PROD_ENV?5:30;f.route(`${r.registerUserUrl}`).post(p(15,m),(0,l.authValidator)(`${r.registerUserUrl}`),c.validateResult,n.register),f.route(`${r.loginUserUrl}`).post(p(15,m),(0,l.authValidator)(`${r.loginUserUrl}`),c.validateResult,n.login),f.route(`${r.authUserUrl}`).patch(p(15,m),d.default,(0,l.authValidator)(`${r.authUserUrl}`),c.validateResult,n.updateUser).get(p(15,m),d.default,n.getAuthUser),t.default=f},8497:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(4899),o=a(5447),n=a(1885),s=i(a(6860)),u=i(a(6985)),d=a(6711),l=a(709),c=s.default.Router();function f(e,t){return(0,u.default)({windowMs:60*e*1e3,max:t,handler:(t,a)=>{a.status(429).json({msg:`Too many requests from this IP, please try again after ${e} minutes`})}})}const p=o.PROD_ENV?10:30;c.route(`${r.handleMonitorUrl}`).post(f(15,p),(0,d.monitorValidator)({create:!0}),l.validateResult,n.createMonitor).get(f(15,p),n.getMonitor).patch(f(15,p),(0,d.monitorValidator)({create:!1}),l.validateResult,n.updateMonitor).delete(f(15,p),n.deleteMonitor),t.default=c},2250:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(4899),o=a(1089),n=i(a(5142)),s=a(6860),u=i(a(6985));n.default.config();const d=(0,s.Router)();function l(e,t){return(0,u.default)({windowMs:60*e*1e3,max:t,handler:(t,a)=>{a.status(429).json({msg:`Too many requests from this IP, please try again after ${e} minutes`})}})}d.route(`${r.handleQueueUrl}`).post(l(15,2),o.startQueue).delete(l(15,2),o.removeQueue),t.default=d},7585:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=i(a(6860)),o=i(a(5566)),n=a(9582),s=a(4899),u=r.default.Router();u.route(`${s.resetMockUsersDbUrl}`).delete(n.resetUsersCollection),u.route(`${s.resetMockApisDbUrl}`).delete(n.resetApiCollection),u.route(`${s.resetMockMonitorDbUrl}`).delete(n.resetMonitorCollection),u.route(`${s.seedMockUsersDbUrl}`).post(n.seedUsersCollection),u.route(`${s.seedMockApisDbUrl}`).post(o.default,n.seedApiCollection),t.default=u},7728:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(4899),o=a(5447),n=a(5994),s=i(a(9710)),u=i(a(3582)),d=i(a(6744)),l=i(a(5142)),c=a(9381),f=i(a(6860));a(5383);const p=i(a(2821)),m=i(a(9770)),A=i(a(7806)),v=i(a(5566)),T=i(a(1271)),S=i(a(7223)),b=i(a(9470)),M=i(a(9316)),g=i(a(2011)),h=i(a(8497)),y=i(a(2250)),O=i(a(7585)),E=i(a(7396)),_=(0,f.default)();l.default.config();const C=(0,c.makeValidator)((e=>{if(e)return(0,c.str)();throw new Error("Value is empty")})),U=(0,c.makeValidator)((e=>{if(e)return(0,c.str)({choices:["development","test","production","staging"]});throw new Error("Value is empty")})),D=(0,c.makeValidator)((e=>{if(e)return(0,c.str)({choices:["no","yes"]});throw new Error("Value is empty")}));(0,c.cleanEnv)(process.env,{MONGO_URL:C(),JWT_SECRET:C(),JWT_ACCESS_TOKEN_LIFETIME:C(),NODE_ENV:U(),CORS_ORIGIN:C(),REDIS_HOST:C(),REDIS_PORT:(0,c.port)(),USING_CI:D()}),o.PROD_ENV&&(0,c.cleanEnv)(process.env,{REDIS_USERNAME:C(),REDIS_PASSWORD:C()}),o.PROD_ENV||_.use((0,b.default)("dev")),_.use(f.default.json()),_.use((0,A.default)()),_.use((0,E.default)()),_.use((0,p.default)()),_.use((0,u.default)({origin:[process.env.CORS_ORIGIN],credentials:!0})),_.use((0,s.default)()),_.use(r.pingHealthCheckUrl,((e,t)=>{t.send(n.pingHealthCheckSuccessMsg)})),_.use(`${r.baseAuthUrl}`,g.default),_.use(`${r.baseApiUrl}`,v.default,M.default),_.use(`${r.baseMonitorUrl}`,v.default,h.default),_.use(`${r.baseQueueUrl}`,v.default,y.default),o.TEST_ENV&&_.use(`${r.baseSeedDbUrl}`,O.default),_.use(S.default),_.use(T.default);let P=parseInt(process.env.PORT)||5e3;(async()=>{try{o.PROD_ENV&&(P=await(0,m.default)({port:5e3})),o.TEST_ENV||(_.listen(P,(async()=>{console.log(`Server is listening on port ${P}...`)})),await(0,d.default)(process.env.MONGO_URL))}catch(e){throw console.log(e),new Error("Error starting app")}})(),t.default=_},9621:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0});const i=a(8037);t.default=(e,t,a)=>t.toString()!==a.toString()?void(0,i.unAuthenticatedError)(e,"Not authorized to access"):void 0},6170:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.formatCurrentMonthYear=t.getDateWithUTCOffset=void 0,t.getDateWithUTCOffset=function(e,t=!0){try{const a=Date.now(),i=a+1e3*(new Date).getTimezoneOffset()*60+36e5*e;return`${new Intl.DateTimeFormat("en-US",{dateStyle:"medium",timeStyle:t?"medium":void 0}).format(i)} (GMT ${e})`}catch(e){return console.error("Error getting date: ",e),"Error getting date"}},t.formatCurrentMonthYear=function(e,t){const a=new Date(Date.UTC(e,t));return new Intl.DateTimeFormat("en-US",{month:"short",year:"numeric"}).format(a)}},4978:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getCronUTCTime=void 0,t.getCronUTCTime=async function({timezone:e,inputDay:t,inputHour:a,inputMinute:i}){if(e<0){const r=a-e;return r>=24?`* ${i} ${r-24} * * ${t+1}`:`* ${i} ${r} * * ${t}`}if(e>0){const r=a-e;return r<=0?`* ${i} ${r+24} * * ${t-1}`:`* ${i} ${r} * * ${t}`}return`* ${i} ${a} * * ${t}`}},246:function(e,t,a){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=a(8037),o=i(a(9153));t.default=async(e,t)=>{if(!e.user)return void(0,r.unAuthenticatedError)(t,"Missing user");if(!e.user.userId)return void(0,r.unAuthenticatedError)(t,"Missing user id");const a=await o.default.findOne({_id:e.user.userId});if(a)return a;(0,r.unAuthenticatedError)(t,"User not found!")}},6866:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.emptyValuesExist=t.validValues=t.validKeys=t.validFieldsFormatted=void 0;const i=a(8037);function r(e){return`${e}`.replace(/,/g,", ")}t.validFieldsFormatted=r,t.validKeys=function(e,t,a,o){const n=r(o);return t.every((e=>o.includes(e)))?(s=t,new Set(s).size===s.length||((0,i.badRequestError)(e,`Duplicate fields, please only provide one of each: ${n}`),!1)):((0,i.badRequestError)(e,`${a}`+n),!1);var s},t.validValues=function(e,t,a,o,n){return n&&!o.includes(t)?((0,i.badRequestError)(e,`${a}`+r(n)),!1):!!o.includes(t)||((0,i.badRequestError)(e,`${a}`+r(o)),!1)},t.emptyValuesExist=function(e,t){return!t.every((e=>null!=e&&""!==e))&&((0,i.badRequestError)(e,"Please fill out all values"),!0)}},2167:e=>{e.exports=require("axios")},8432:e=>{e.exports=require("bcryptjs")},7807:e=>{e.exports=require("bullmq")},9710:e=>{e.exports=require("cookie-parser")},3582:e=>{e.exports=require("cors")},5142:e=>{e.exports=require("dotenv")},9381:e=>{e.exports=require("envalid")},6860:e=>{e.exports=require("express")},5383:e=>{e.exports=require("express-async-errors")},2821:e=>{e.exports=require("express-mongo-sanitize")},6985:e=>{e.exports=require("express-rate-limit")},3553:e=>{e.exports=require("express-validator")},9770:e=>{e.exports=require("get-port")},7806:e=>{e.exports=require("helmet")},8010:e=>{e.exports=require("http-status-codes")},1495:e=>{e.exports=require("ioredis")},9344:e=>{e.exports=require("jsonwebtoken")},1185:e=>{e.exports=require("mongoose")},9470:e=>{e.exports=require("morgan")},1564:e=>{e.exports=require("validator")},7396:e=>{e.exports=require("xss-clean")}},t={};!function a(i){var r=t[i];if(void 0!==r)return r.exports;var o=t[i]={exports:{}};return e[i].call(o.exports,o,o.exports,a),o.exports}(7728)})();