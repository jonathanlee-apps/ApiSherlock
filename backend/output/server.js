(()=>{"use strict";var e={975:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0}),a.cookieHttpOnlySetting=a.cookieSameSiteSetting=a.cookieSecureSetting=a.cookieExpiryTime=a.cookieName=void 0,i(t(142)).default.config(),a.cookieName="apiSherlockId",a.cookieExpiryTime=864e5,a.cookieSecureSetting=!0,a.cookieSameSiteSetting="none",a.cookieHttpOnlySetting=!0},663:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.validGetAllApisKeys=a.validUpdateApiKeys=a.validCreateApiKeys=a.validUpdateKeys=a.validLoginKeys=a.validRegisterKeys=void 0,a.validRegisterKeys=["name","email","password","timezoneGMT"],a.validLoginKeys=["email","password"],a.validUpdateKeys=["name","email","timezoneGMT"],a.validCreateApiKeys=["url","host","monitoring"],a.validUpdateApiKeys=[...a.validCreateApiKeys],a.validGetAllApisKeys=["status","monitoring","sort","search","page","limit","search"]},994:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.pingHealthCheckSuccessMsg=a.pingOneApiSuccessMsg=a.pingAllApisSuccessMsg=a.deleteApiSuccessMsg=void 0,a.deleteApiSuccessMsg={msg:"Success! Api removed"},a.pingAllApisSuccessMsg={msg:"Pinged APIs!"},a.pingOneApiSuccessMsg={msg:"Pinged API!"},a.pingHealthCheckSuccessMsg="hello world!"},169:(e,a,t)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.timezoneOffsets=void 0;const i=t(326);a.timezoneOffsets=[...new Set(i.timezones.map((e=>e.offset)))]},326:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.timezones=void 0,a.timezones=[{value:"Dateline Standard Time",abbr:"DST",offset:-12,isdst:!1,text:"(UTC-12:00) International Date Line West",utc:["Etc/GMT+12"]},{value:"UTC-11",abbr:"U",offset:-11,isdst:!1,text:"(UTC-11:00) Coordinated Universal Time-11",utc:["Etc/GMT+11","Pacific/Midway","Pacific/Niue","Pacific/Pago_Pago"]},{value:"Hawaiian Standard Time",abbr:"HST",offset:-10,isdst:!1,text:"(UTC-10:00) Hawaii",utc:["Etc/GMT+10","Pacific/Honolulu","Pacific/Johnston","Pacific/Rarotonga","Pacific/Tahiti"]},{value:"Alaskan Standard Time",abbr:"AKDT",offset:-8,isdst:!0,text:"(UTC-09:00) Alaska",utc:["America/Anchorage","America/Juneau","America/Nome","America/Sitka","America/Yakutat"]},{value:"Pacific Standard Time (Mexico)",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-08:00) Baja California",utc:["America/Santa_Isabel"]},{value:"Pacific Daylight Time",abbr:"PDT",offset:-7,isdst:!0,text:"(UTC-07:00) Pacific Daylight Time (US & Canada)",utc:["America/Los_Angeles","America/Tijuana","America/Vancouver"]},{value:"Pacific Standard Time",abbr:"PST",offset:-8,isdst:!1,text:"(UTC-08:00) Pacific Standard Time (US & Canada)",utc:["America/Los_Angeles","America/Tijuana","America/Vancouver","PST8PDT"]},{value:"US Mountain Standard Time",abbr:"UMST",offset:-7,isdst:!1,text:"(UTC-07:00) Arizona",utc:["America/Creston","America/Dawson","America/Dawson_Creek","America/Hermosillo","America/Phoenix","America/Whitehorse","Etc/GMT+7"]},{value:"Mountain Standard Time (Mexico)",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Chihuahua, La Paz, Mazatlan",utc:["America/Chihuahua","America/Mazatlan"]},{value:"Mountain Standard Time",abbr:"MDT",offset:-6,isdst:!0,text:"(UTC-07:00) Mountain Time (US & Canada)",utc:["America/Boise","America/Cambridge_Bay","America/Denver","America/Edmonton","America/Inuvik","America/Ojinaga","America/Yellowknife","MST7MDT"]},{value:"Central America Standard Time",abbr:"CAST",offset:-6,isdst:!1,text:"(UTC-06:00) Central America",utc:["America/Belize","America/Costa_Rica","America/El_Salvador","America/Guatemala","America/Managua","America/Tegucigalpa","Etc/GMT+6","Pacific/Galapagos"]},{value:"Central Standard Time",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Central Time (US & Canada)",utc:["America/Chicago","America/Indiana/Knox","America/Indiana/Tell_City","America/Matamoros","America/Menominee","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Rainy_River","America/Rankin_Inlet","America/Resolute","America/Winnipeg","CST6CDT"]},{value:"Central Standard Time (Mexico)",abbr:"CDT",offset:-5,isdst:!0,text:"(UTC-06:00) Guadalajara, Mexico City, Monterrey",utc:["America/Bahia_Banderas","America/Cancun","America/Merida","America/Mexico_City","America/Monterrey"]},{value:"Canada Central Standard Time",abbr:"CCST",offset:-6,isdst:!1,text:"(UTC-06:00) Saskatchewan",utc:["America/Regina","America/Swift_Current"]},{value:"SA Pacific Standard Time",abbr:"SPST",offset:-5,isdst:!1,text:"(UTC-05:00) Bogota, Lima, Quito",utc:["America/Bogota","America/Cayman","America/Coral_Harbour","America/Eirunepe","America/Guayaquil","America/Jamaica","America/Lima","America/Panama","America/Rio_Branco","Etc/GMT+5"]},{value:"Eastern Standard Time",abbr:"EST",offset:-5,isdst:!1,text:"(UTC-05:00) Eastern Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto"]},{value:"Eastern Daylight Time",abbr:"EDT",offset:-4,isdst:!0,text:"(UTC-04:00) Eastern Daylight Time (US & Canada)",utc:["America/Detroit","America/Havana","America/Indiana/Petersburg","America/Indiana/Vincennes","America/Indiana/Winamac","America/Iqaluit","America/Kentucky/Monticello","America/Louisville","America/Montreal","America/Nassau","America/New_York","America/Nipigon","America/Pangnirtung","America/Port-au-Prince","America/Thunder_Bay","America/Toronto"]},{value:"US Eastern Standard Time",abbr:"UEDT",offset:-5,isdst:!1,text:"(UTC-05:00) Indiana (East)",utc:["America/Indiana/Marengo","America/Indiana/Vevay","America/Indianapolis"]},{value:"Venezuela Standard Time",abbr:"VST",offset:-4.5,isdst:!1,text:"(UTC-04:30) Caracas",utc:["America/Caracas"]},{value:"Paraguay Standard Time",abbr:"PYT",offset:-4,isdst:!1,text:"(UTC-04:00) Asuncion",utc:["America/Asuncion"]},{value:"Atlantic Standard Time",abbr:"ADT",offset:-3,isdst:!0,text:"(UTC-04:00) Atlantic Time (Canada)",utc:["America/Glace_Bay","America/Goose_Bay","America/Halifax","America/Moncton","America/Thule","Atlantic/Bermuda"]},{value:"Central Brazilian Standard Time",abbr:"CBST",offset:-4,isdst:!1,text:"(UTC-04:00) Cuiaba",utc:["America/Campo_Grande","America/Cuiaba"]},{value:"SA Western Standard Time",abbr:"SWST",offset:-4,isdst:!1,text:"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan",utc:["America/Anguilla","America/Antigua","America/Aruba","America/Barbados","America/Blanc-Sablon","America/Boa_Vista","America/Curacao","America/Dominica","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guyana","America/Kralendijk","America/La_Paz","America/Lower_Princes","America/Manaus","America/Marigot","America/Martinique","America/Montserrat","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Santo_Domingo","America/St_Barthelemy","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Tortola","Etc/GMT+4"]},{value:"Pacific SA Standard Time",abbr:"PSST",offset:-4,isdst:!1,text:"(UTC-04:00) Santiago",utc:["America/Santiago","Antarctica/Palmer"]},{value:"Newfoundland Standard Time",abbr:"NDT",offset:-2.5,isdst:!0,text:"(UTC-03:30) Newfoundland",utc:["America/St_Johns"]},{value:"E. South America Standard Time",abbr:"ESAST",offset:-3,isdst:!1,text:"(UTC-03:00) Brasilia",utc:["America/Sao_Paulo"]},{value:"Argentina Standard Time",abbr:"AST",offset:-3,isdst:!1,text:"(UTC-03:00) Buenos Aires",utc:["America/Argentina/La_Rioja","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Buenos_Aires","America/Catamarca","America/Cordoba","America/Jujuy","America/Mendoza"]},{value:"SA Eastern Standard Time",abbr:"SEST",offset:-3,isdst:!1,text:"(UTC-03:00) Cayenne, Fortaleza",utc:["America/Araguaina","America/Belem","America/Cayenne","America/Fortaleza","America/Maceio","America/Paramaribo","America/Recife","America/Santarem","Antarctica/Rothera","Atlantic/Stanley","Etc/GMT+3"]},{value:"Greenland Standard Time",abbr:"GDT",offset:-3,isdst:!0,text:"(UTC-03:00) Greenland",utc:["America/Godthab"]},{value:"Montevideo Standard Time",abbr:"MST",offset:-3,isdst:!1,text:"(UTC-03:00) Montevideo",utc:["America/Montevideo"]},{value:"Bahia Standard Time",abbr:"BST",offset:-3,isdst:!1,text:"(UTC-03:00) Salvador",utc:["America/Bahia"]},{value:"UTC-02",abbr:"U",offset:-2,isdst:!1,text:"(UTC-02:00) Coordinated Universal Time-02",utc:["America/Noronha","Atlantic/South_Georgia","Etc/GMT+2"]},{value:"Mid-Atlantic Standard Time",abbr:"MDT",offset:-1,isdst:!0,text:"(UTC-02:00) Mid-Atlantic - Old",utc:[]},{value:"Azores Standard Time",abbr:"ADT",offset:0,isdst:!0,text:"(UTC-01:00) Azores",utc:["America/Scoresbysund","Atlantic/Azores"]},{value:"Cape Verde Standard Time",abbr:"CVST",offset:-1,isdst:!1,text:"(UTC-01:00) Cape Verde Is.",utc:["Atlantic/Cape_Verde","Etc/GMT+1"]},{value:"Morocco Standard Time",abbr:"MDT",offset:1,isdst:!0,text:"(UTC) Casablanca",utc:["Africa/Casablanca","Africa/El_Aaiun"]},{value:"UTC",abbr:"UTC",offset:0,isdst:!1,text:"(UTC) Coordinated Universal Time",utc:["America/Danmarkshavn","Etc/GMT"]},{value:"GMT Standard Time",abbr:"GMT",offset:0,isdst:!1,text:"(UTC) Edinburgh, London",utc:["Europe/Isle_of_Man","Europe/Guernsey","Europe/Jersey","Europe/London"]},{value:"British Summer Time",abbr:"BST",offset:1,isdst:!0,text:"(UTC+01:00) Edinburgh, London",utc:["Europe/Isle_of_Man","Europe/Guernsey","Europe/Jersey","Europe/London"]},{value:"GMT Standard Time",abbr:"GDT",offset:1,isdst:!0,text:"(UTC) Dublin, Lisbon",utc:["Atlantic/Canary","Atlantic/Faeroe","Atlantic/Madeira","Europe/Dublin","Europe/Lisbon"]},{value:"Greenwich Standard Time",abbr:"GST",offset:0,isdst:!1,text:"(UTC) Monrovia, Reykjavik",utc:["Africa/Abidjan","Africa/Accra","Africa/Bamako","Africa/Banjul","Africa/Bissau","Africa/Conakry","Africa/Dakar","Africa/Freetown","Africa/Lome","Africa/Monrovia","Africa/Nouakchott","Africa/Ouagadougou","Africa/Sao_Tome","Atlantic/Reykjavik","Atlantic/St_Helena"]},{value:"W. Europe Standard Time",abbr:"WEDT",offset:2,isdst:!0,text:"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",utc:["Arctic/Longyearbyen","Europe/Amsterdam","Europe/Andorra","Europe/Berlin","Europe/Busingen","Europe/Gibraltar","Europe/Luxembourg","Europe/Malta","Europe/Monaco","Europe/Oslo","Europe/Rome","Europe/San_Marino","Europe/Stockholm","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Zurich"]},{value:"Central Europe Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",utc:["Europe/Belgrade","Europe/Bratislava","Europe/Budapest","Europe/Ljubljana","Europe/Podgorica","Europe/Prague","Europe/Tirane"]},{value:"Romance Standard Time",abbr:"RDT",offset:2,isdst:!0,text:"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris",utc:["Africa/Ceuta","Europe/Brussels","Europe/Copenhagen","Europe/Madrid","Europe/Paris"]},{value:"Central European Standard Time",abbr:"CEDT",offset:2,isdst:!0,text:"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb",utc:["Europe/Sarajevo","Europe/Skopje","Europe/Warsaw","Europe/Zagreb"]},{value:"W. Central Africa Standard Time",abbr:"WCAST",offset:1,isdst:!1,text:"(UTC+01:00) West Central Africa",utc:["Africa/Algiers","Africa/Bangui","Africa/Brazzaville","Africa/Douala","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Luanda","Africa/Malabo","Africa/Ndjamena","Africa/Niamey","Africa/Porto-Novo","Africa/Tunis","Etc/GMT-1"]},{value:"Namibia Standard Time",abbr:"NST",offset:1,isdst:!1,text:"(UTC+01:00) Windhoek",utc:["Africa/Windhoek"]},{value:"GTB Standard Time",abbr:"GDT",offset:3,isdst:!0,text:"(UTC+02:00) Athens, Bucharest",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau"]},{value:"Middle East Standard Time",abbr:"MEDT",offset:3,isdst:!0,text:"(UTC+02:00) Beirut",utc:["Asia/Beirut"]},{value:"Egypt Standard Time",abbr:"EST",offset:2,isdst:!1,text:"(UTC+02:00) Cairo",utc:["Africa/Cairo"]},{value:"Syria Standard Time",abbr:"SDT",offset:3,isdst:!0,text:"(UTC+02:00) Damascus",utc:["Asia/Damascus"]},{value:"E. Europe Standard Time",abbr:"EEDT",offset:3,isdst:!0,text:"(UTC+02:00) E. Europe",utc:["Asia/Nicosia","Europe/Athens","Europe/Bucharest","Europe/Chisinau","Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Nicosia","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{value:"South Africa Standard Time",abbr:"SAST",offset:2,isdst:!1,text:"(UTC+02:00) Harare, Pretoria",utc:["Africa/Blantyre","Africa/Bujumbura","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Kigali","Africa/Lubumbashi","Africa/Lusaka","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Etc/GMT-2"]},{value:"FLE Standard Time",abbr:"FDT",offset:3,isdst:!0,text:"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius",utc:["Europe/Helsinki","Europe/Kiev","Europe/Mariehamn","Europe/Riga","Europe/Sofia","Europe/Tallinn","Europe/Uzhgorod","Europe/Vilnius","Europe/Zaporozhye"]},{value:"Turkey Standard Time",abbr:"TDT",offset:3,isdst:!1,text:"(UTC+03:00) Istanbul",utc:["Europe/Istanbul"]},{value:"Israel Standard Time",abbr:"JDT",offset:3,isdst:!0,text:"(UTC+02:00) Jerusalem",utc:["Asia/Jerusalem"]},{value:"Libya Standard Time",abbr:"LST",offset:2,isdst:!1,text:"(UTC+02:00) Tripoli",utc:["Africa/Tripoli"]},{value:"Jordan Standard Time",abbr:"JST",offset:3,isdst:!1,text:"(UTC+03:00) Amman",utc:["Asia/Amman"]},{value:"Arabic Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Baghdad",utc:["Asia/Baghdad"]},{value:"Kaliningrad Standard Time",abbr:"KST",offset:3,isdst:!1,text:"(UTC+02:00) Kaliningrad",utc:["Europe/Kaliningrad"]},{value:"Arab Standard Time",abbr:"AST",offset:3,isdst:!1,text:"(UTC+03:00) Kuwait, Riyadh",utc:["Asia/Aden","Asia/Bahrain","Asia/Kuwait","Asia/Qatar","Asia/Riyadh"]},{value:"E. Africa Standard Time",abbr:"EAST",offset:3,isdst:!1,text:"(UTC+03:00) Nairobi",utc:["Africa/Addis_Ababa","Africa/Asmera","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Mogadishu","Africa/Nairobi","Antarctica/Syowa","Etc/GMT-3","Indian/Antananarivo","Indian/Comoro","Indian/Mayotte"]},{value:"Moscow Standard Time",abbr:"MSK",offset:3,isdst:!1,text:"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk",utc:["Europe/Kirov","Europe/Moscow","Europe/Simferopol","Europe/Volgograd","Europe/Minsk"]},{value:"Samara Time",abbr:"SAMT",offset:4,isdst:!1,text:"(UTC+04:00) Samara, Ulyanovsk, Saratov",utc:["Europe/Astrakhan","Europe/Samara","Europe/Ulyanovsk"]},{value:"Iran Standard Time",abbr:"IDT",offset:4.5,isdst:!0,text:"(UTC+03:30) Tehran",utc:["Asia/Tehran"]},{value:"Arabian Standard Time",abbr:"AST",offset:4,isdst:!1,text:"(UTC+04:00) Abu Dhabi, Muscat",utc:["Asia/Dubai","Asia/Muscat","Etc/GMT-4"]},{value:"Azerbaijan Standard Time",abbr:"ADT",offset:5,isdst:!0,text:"(UTC+04:00) Baku",utc:["Asia/Baku"]},{value:"Mauritius Standard Time",abbr:"MST",offset:4,isdst:!1,text:"(UTC+04:00) Port Louis",utc:["Indian/Mahe","Indian/Mauritius","Indian/Reunion"]},{value:"Georgian Standard Time",abbr:"GET",offset:4,isdst:!1,text:"(UTC+04:00) Tbilisi",utc:["Asia/Tbilisi"]},{value:"Caucasus Standard Time",abbr:"CST",offset:4,isdst:!1,text:"(UTC+04:00) Yerevan",utc:["Asia/Yerevan"]},{value:"Afghanistan Standard Time",abbr:"AST",offset:4.5,isdst:!1,text:"(UTC+04:30) Kabul",utc:["Asia/Kabul"]},{value:"West Asia Standard Time",abbr:"WAST",offset:5,isdst:!1,text:"(UTC+05:00) Ashgabat, Tashkent",utc:["Antarctica/Mawson","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Dushanbe","Asia/Oral","Asia/Samarkand","Asia/Tashkent","Etc/GMT-5","Indian/Kerguelen","Indian/Maldives"]},{value:"Yekaterinburg Time",abbr:"YEKT",offset:5,isdst:!1,text:"(UTC+05:00) Yekaterinburg",utc:["Asia/Yekaterinburg"]},{value:"Pakistan Standard Time",abbr:"PKT",offset:5,isdst:!1,text:"(UTC+05:00) Islamabad, Karachi",utc:["Asia/Karachi"]},{value:"India Standard Time",abbr:"IST",offset:5.5,isdst:!1,text:"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi",utc:["Asia/Kolkata","Asia/Calcutta"]},{value:"Sri Lanka Standard Time",abbr:"SLST",offset:5.5,isdst:!1,text:"(UTC+05:30) Sri Jayawardenepura",utc:["Asia/Colombo"]},{value:"Nepal Standard Time",abbr:"NST",offset:5.75,isdst:!1,text:"(UTC+05:45) Kathmandu",utc:["Asia/Kathmandu"]},{value:"Central Asia Standard Time",abbr:"CAST",offset:6,isdst:!1,text:"(UTC+06:00) Nur-Sultan (Astana)",utc:["Antarctica/Vostok","Asia/Almaty","Asia/Bishkek","Asia/Qyzylorda","Asia/Urumqi","Etc/GMT-6","Indian/Chagos"]},{value:"Bangladesh Standard Time",abbr:"BST",offset:6,isdst:!1,text:"(UTC+06:00) Dhaka",utc:["Asia/Dhaka","Asia/Thimphu"]},{value:"Myanmar Standard Time",abbr:"MST",offset:6.5,isdst:!1,text:"(UTC+06:30) Yangon (Rangoon)",utc:["Asia/Rangoon","Indian/Cocos"]},{value:"SE Asia Standard Time",abbr:"SAST",offset:7,isdst:!1,text:"(UTC+07:00) Bangkok, Hanoi, Jakarta",utc:["Antarctica/Davis","Asia/Bangkok","Asia/Hovd","Asia/Jakarta","Asia/Phnom_Penh","Asia/Pontianak","Asia/Saigon","Asia/Vientiane","Etc/GMT-7","Indian/Christmas"]},{value:"N. Central Asia Standard Time",abbr:"NCAST",offset:7,isdst:!1,text:"(UTC+07:00) Novosibirsk",utc:["Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk"]},{value:"China Standard Time",abbr:"CST",offset:8,isdst:!1,text:"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi",utc:["Asia/Hong_Kong","Asia/Macau","Asia/Shanghai"]},{value:"North Asia Standard Time",abbr:"NAST",offset:8,isdst:!1,text:"(UTC+08:00) Krasnoyarsk",utc:["Asia/Krasnoyarsk"]},{value:"Singapore Standard Time",abbr:"MPST",offset:8,isdst:!1,text:"(UTC+08:00) Kuala Lumpur, Singapore",utc:["Asia/Brunei","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Makassar","Asia/Manila","Asia/Singapore","Etc/GMT-8"]},{value:"W. Australia Standard Time",abbr:"WAST",offset:8,isdst:!1,text:"(UTC+08:00) Perth",utc:["Antarctica/Casey","Australia/Perth"]},{value:"Taipei Standard Time",abbr:"TST",offset:8,isdst:!1,text:"(UTC+08:00) Taipei",utc:["Asia/Taipei"]},{value:"Ulaanbaatar Standard Time",abbr:"UST",offset:8,isdst:!1,text:"(UTC+08:00) Ulaanbaatar",utc:["Asia/Choibalsan","Asia/Ulaanbaatar"]},{value:"North Asia East Standard Time",abbr:"NAEST",offset:8,isdst:!1,text:"(UTC+08:00) Irkutsk",utc:["Asia/Irkutsk"]},{value:"Japan Standard Time",abbr:"JST",offset:9,isdst:!1,text:"(UTC+09:00) Osaka, Sapporo, Tokyo",utc:["Asia/Dili","Asia/Jayapura","Asia/Tokyo","Etc/GMT-9","Pacific/Palau"]},{value:"Korea Standard Time",abbr:"KST",offset:9,isdst:!1,text:"(UTC+09:00) Seoul",utc:["Asia/Pyongyang","Asia/Seoul"]},{value:"Cen. Australia Standard Time",abbr:"CAST",offset:9.5,isdst:!1,text:"(UTC+09:30) Adelaide",utc:["Australia/Adelaide","Australia/Broken_Hill"]},{value:"AUS Central Standard Time",abbr:"ACST",offset:9.5,isdst:!1,text:"(UTC+09:30) Darwin",utc:["Australia/Darwin"]},{value:"E. Australia Standard Time",abbr:"EAST",offset:10,isdst:!1,text:"(UTC+10:00) Brisbane",utc:["Australia/Brisbane","Australia/Lindeman"]},{value:"AUS Eastern Standard Time",abbr:"AEST",offset:10,isdst:!1,text:"(UTC+10:00) Canberra, Melbourne, Sydney",utc:["Australia/Melbourne","Australia/Sydney"]},{value:"West Pacific Standard Time",abbr:"WPST",offset:10,isdst:!1,text:"(UTC+10:00) Guam, Port Moresby",utc:["Antarctica/DumontDUrville","Etc/GMT-10","Pacific/Guam","Pacific/Port_Moresby","Pacific/Saipan","Pacific/Truk"]},{value:"Tasmania Standard Time",abbr:"TST",offset:10,isdst:!1,text:"(UTC+10:00) Hobart",utc:["Australia/Currie","Australia/Hobart"]},{value:"Yakutsk Standard Time",abbr:"YST",offset:9,isdst:!1,text:"(UTC+09:00) Yakutsk",utc:["Asia/Chita","Asia/Khandyga","Asia/Yakutsk"]},{value:"Central Pacific Standard Time",abbr:"CPST",offset:11,isdst:!1,text:"(UTC+11:00) Solomon Is., New Caledonia",utc:["Antarctica/Macquarie","Etc/GMT-11","Pacific/Efate","Pacific/Guadalcanal","Pacific/Kosrae","Pacific/Noumea","Pacific/Ponape"]},{value:"Vladivostok Standard Time",abbr:"VST",offset:11,isdst:!1,text:"(UTC+11:00) Vladivostok",utc:["Asia/Sakhalin","Asia/Ust-Nera","Asia/Vladivostok"]},{value:"New Zealand Standard Time",abbr:"NZST",offset:12,isdst:!1,text:"(UTC+12:00) Auckland, Wellington",utc:["Antarctica/McMurdo","Pacific/Auckland"]},{value:"UTC+12",abbr:"U",offset:12,isdst:!1,text:"(UTC+12:00) Coordinated Universal Time+12",utc:["Etc/GMT-12","Pacific/Funafuti","Pacific/Kwajalein","Pacific/Majuro","Pacific/Nauru","Pacific/Tarawa","Pacific/Wake","Pacific/Wallis"]},{value:"Fiji Standard Time",abbr:"FST",offset:12,isdst:!1,text:"(UTC+12:00) Fiji",utc:["Pacific/Fiji"]},{value:"Magadan Standard Time",abbr:"MST",offset:12,isdst:!1,text:"(UTC+12:00) Magadan",utc:["Asia/Anadyr","Asia/Kamchatka","Asia/Magadan","Asia/Srednekolymsk"]},{value:"Kamchatka Standard Time",abbr:"KDT",offset:13,isdst:!0,text:"(UTC+12:00) Petropavlovsk-Kamchatsky - Old",utc:["Asia/Kamchatka"]},{value:"Tonga Standard Time",abbr:"TST",offset:13,isdst:!1,text:"(UTC+13:00) Nuku'alofa",utc:["Etc/GMT-13","Pacific/Enderbury","Pacific/Fakaofo","Pacific/Tongatapu"]},{value:"Samoa Standard Time",abbr:"SST",offset:13,isdst:!1,text:"(UTC+13:00) Samoa",utc:["Pacific/Apia"]}]},525:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.refreshAccessTokenUrl=a.pingHealthCheckUrl=a.pingOneApiUrl=a.pingAllApisUrl=a.getApiUrl=a.editApiUrl=a.deleteApiUrl=a.getAllApisStatsUrl=a.getAllApisUrl=a.createApiUrl=a.updateUserUrl=a.loginUserUrl=a.registerUserUrl=a.seedMockApisDbUrl=a.resetMockApisDbUrl=a.seedMockUsersDbUrl=a.resetMockUsersDbUrl=a.baseSeedDbUrl=a.baseApiUrl=a.baseAuthUrl=void 0,a.baseAuthUrl="/api/auth",a.baseApiUrl="/api/api",a.baseSeedDbUrl="/api/mockDb",a.registerUserUrl="/register",a.loginUserUrl="/login",a.updateUserUrl="/updateUser",a.refreshAccessTokenUrl="/refreshToken",a.createApiUrl="",a.getAllApisUrl="",a.getAllApisStatsUrl="/stats",a.deleteApiUrl="",a.editApiUrl="",a.getApiUrl="",a.pingAllApisUrl="/pingAll",a.pingOneApiUrl="/pingOne",a.resetMockUsersDbUrl="/resetDb/users",a.resetMockApisDbUrl="/resetDb/api",a.seedMockUsersDbUrl="/seedDb/users",a.seedMockApisDbUrl="/seedDb/api",a.pingHealthCheckUrl="/api/ping"},217:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0}),a.showStats=a.getApi=a.updateApi=a.getAllApis=a.deleteApi=a.createApi=void 0;const r=t(170),s=t(663),o=t(994),n=t(37),u=t(10),d=i(t(621)),c=t(40),l=i(t(129)),f=i(t(445)),A=i(t(185)),m=t(213);a.createApi=async(e,a)=>{try{const t=await(0,l.default)(e,a);if(!t)return void(0,n.unAuthenticatedError)(a,"Invalid Credentials");(0,c.validateInputKeys)(e,a,"Invalid API creation, can only input: ",s.validCreateApiKeys);const{url:i,host:r,monitoring:o}=e.body;if(!i||!r||!o)return void(0,n.badRequestError)(a,"Please provide all values");e.body.createdBy=t._id;const d=await f.default.create(e.body);a.status(u.StatusCodes.CREATED).json(d)}catch(e){return console.log(e),void(0,n.badRequestError)(a,e)}},a.getAllApis=async(e,a)=>{try{const t=await(0,l.default)(e,a);if(!t)return void(0,n.unAuthenticatedError)(a,"Invalid Credentials");(0,c.validateInputKeys)(e,a,"Invalid search params, can only use: ",s.validGetAllApisKeys,"query");const{status:i,monitoring:r,sort:o,search:d}=e.query,A={createdBy:t._id};i&&"All"!==i&&(A.status=i),r&&"All"!==r&&(A.monitoring=r),d&&(A.url={$regex:d,$options:"i"});let p=f.default.find(A);p=p.sort("-_id"),o===m.ApiSortOptions.Latest&&(p=p.sort("-createdAt")),o===m.ApiSortOptions.Oldest&&(p=p.sort("createdAt")),o===m.ApiSortOptions.A_Z&&(p=p.sort("url")),o===m.ApiSortOptions.Z_A&&(p=p.sort("-url"));const T=Number(e.query.page)||1,b=Number(e.query.limit)||10,S=(T-1)*b;p=p.skip(S).limit(b);const g=await p,v=await f.default.countDocuments(A),h=Math.ceil(v/b);a.status(u.StatusCodes.OK).json({allApis:g,totalApis:v,numOfPages:h})}catch(e){return console.log(e),void(0,n.badRequestError)(a,e)}},a.updateApi=async(e,a)=>{try{const t=await(0,l.default)(e,a);if(!t)return void(0,n.unAuthenticatedError)(a,"Invalid Credentials");const{id:i}=e.params,r=await f.default.findOne({_id:i});if(!r)return void(0,n.notFoundError)(a,`No API with id :${i}`);(0,d.default)(a,t._id,r.createdBy),(0,c.validateInputKeys)(e,a,"Error updating API, can only use: ",s.validUpdateApiKeys);const o=await f.default.findOneAndUpdate({_id:i},e.body,{new:!0,runValidators:!0});a.status(u.StatusCodes.OK).json(o)}catch(e){return console.log(e),void(0,n.badRequestError)(a,e)}},a.deleteApi=async(e,a)=>{try{const t=await(0,l.default)(e,a);if(!t)return void(0,n.unAuthenticatedError)(a,"Invalid Credentials");const{id:i}=e.params,r=await f.default.findOne({_id:i});if(!r)return void(0,n.notFoundError)(a,`No API with id :${i}`);(0,d.default)(a,t._id,r.createdBy),await r.remove(),a.status(u.StatusCodes.OK).json(o.deleteApiSuccessMsg)}catch(e){return console.log(e),void(0,n.badRequestError)(a,e)}},a.getApi=async(e,a)=>{try{const t=await(0,l.default)(e,a);if(!t)return void(0,n.unAuthenticatedError)(a,"Invalid Credentials");const{id:i}=e.params,r=await f.default.findOne({_id:i});if(!r)return void(0,n.notFoundError)(a,`No API with id :${i}`);(0,d.default)(a,t._id,r.createdBy),a.status(u.StatusCodes.OK).json(r)}catch(e){return console.log(e),void(0,n.badRequestError)(a,e)}};let p=[{date:"",count:0}];a.showStats=async(e,a)=>{try{const t=await(0,l.default)(e,a);if(!t||!t._id)return void(0,n.unAuthenticatedError)(a,"Invalid Credentials");const i=new A.default.Types.ObjectId(t._id),s=(await f.default.aggregate([{$match:{createdBy:i}},{$group:{_id:"$status",count:{$sum:1}}}])).reduce(((e,a)=>{const{_id:t,count:i}=a;return e[t]=i,e}),{}),o={healthy:s.healthy||0,unhealthy:s.unhealthy||0,pending:s.pending||0},d=await f.default.aggregate([{$match:{createdBy:i}},{$group:{_id:{year:{$year:"$createdAt"},month:{$month:"$createdAt"}},count:{$sum:1}}},{$sort:{"_id.year":-1,"_id.month":-1}},{$limit:6}]);d.length>0&&(p=d.map((e=>{const{_id:{year:a,month:t},count:i}=e;return{date:(0,r.formatCurrentMonthYear)(a,t),count:i}})).reverse()),a.status(u.StatusCodes.OK).json({defaultStats:o,monthlyApis:p})}catch(e){return console.log(e),void(0,n.badRequestError)(a,e)}}},14:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0}),a.refreshAccessToken=a.updateUser=a.login=a.register=void 0;const r=t(975),s=t(663),o=t(169),n=i(t(142)),u=t(37),d=t(10),c=i(t(344)),l=t(40),f=i(t(129)),A=i(t(153));n.default.config();const{JWT_ACCESS_TOKEN_LIFETIME:m,JWT_REFRESH_TOKEN_LIFETIME:p}=process.env;a.register=async(e,a)=>{try{(0,l.validateInputKeys)(e,a,"Invalid register, can only use: ",s.validRegisterKeys);const{name:t,email:i,password:n,timezoneGMT:c}=e.body;if(!t||!i||!n)return void(0,u.badRequestError)(a,"Please provide all values");if(!o.timezoneOffsets.includes(c))return void(0,u.badRequestError)(a,`Invalid timezone, please select one of: ${o.timezoneOffsets}`);if(await A.default.findOne({email:i}))return void(0,u.badRequestError)(a,"Please use a different email");const f=await A.default.create({name:t,email:i,password:n,timezoneGMT:c}),T=f.createJWT(m),b=f.createJWT(p);a.cookie(r.cookieName,b,{maxAge:r.cookieExpiryTime,secure:r.cookieSecureSetting,httpOnly:r.cookieHttpOnlySetting,sameSite:r.cookieSameSiteSetting}).status(d.StatusCodes.CREATED).json({user:{email:f.email,name:f.name,timezoneGMT:f.timezoneGMT},accessToken:T})}catch(e){return console.log(e),void(0,u.badRequestError)(a,e)}},a.login=async(e,a)=>{try{(0,l.validateInputKeys)(e,a,"Invalid login, can only use: ",s.validLoginKeys);const{email:t,password:i}=e.body;if(!t||!i)return void(0,u.badRequestError)(a,"Please provide all values");const o=await A.default.findOne({email:t}).select("+password");if(!o||!o.password)return void(0,u.unAuthenticatedError)(a,"Invalid Credentials");if(!await o.comparePassword(i,o.password))return void(0,u.unAuthenticatedError)(a,"Invalid Credentials");const n=o.createJWT(m),c=o.createJWT(p);o.password="",a.cookie(r.cookieName,c,{maxAge:r.cookieExpiryTime,secure:r.cookieSecureSetting,httpOnly:r.cookieHttpOnlySetting,sameSite:r.cookieSameSiteSetting}).status(d.StatusCodes.OK).json({user:{email:o.email,name:o.name,timezoneGMT:o.timezoneGMT},accessToken:n})}catch(e){return console.log(e),void(0,u.badRequestError)(a,e)}},a.updateUser=async(e,a)=>{try{const t=await(0,f.default)(e,a);if(!t)return void(0,u.unAuthenticatedError)(a,"Invalid Credentials");(0,l.validateInputKeys)(e,a,"Invalid update, can only update: ",s.validUpdateKeys);const{email:i,name:n,timezoneGMT:c}=e.body;if(!i||!n||!c)return void(0,u.badRequestError)(a,"Please provide all values");if(!o.timezoneOffsets.includes(c))return void(0,u.badRequestError)(a,`Invalid timezone, please select one of: ${o.timezoneOffsets}`);if(t.email!==i&&await A.default.findOne({email:i}))return void(0,u.badRequestError)(a,"Please use a different email");t.email=i,t.name=n,t.timezoneGMT=c,await t.save();const T=t.createJWT(m),b=t.createJWT(p);a.cookie(r.cookieName,b,{maxAge:r.cookieExpiryTime,secure:r.cookieSecureSetting,httpOnly:r.cookieHttpOnlySetting,sameSite:r.cookieSameSiteSetting}).status(d.StatusCodes.OK).json({user:{email:t.email,name:t.name,timezoneGMT:t.timezoneGMT},accessToken:T})}catch(e){return console.log(e),void(0,u.badRequestError)(a,e)}},a.refreshAccessToken=async(e,a)=>{try{if(!e.cookies)return void(0,u.badRequestError)(a,"Cookies missing");const t=e.cookies[r.cookieName];if(!t)return void(0,u.unAuthenticatedError)(a,"Invalid credentials, please login again");let i;try{i=c.default.verify(t,process.env.JWT_SECRET)}catch(e){return void(0,u.unAuthenticatedError)(a,"Please login again")}const s=await A.default.findOne({_id:i.userId});if(!s)return void(0,u.unAuthenticatedError)(a,"Invalid user credentials");const o=s.createJWT(m);a.status(d.StatusCodes.OK).json({accessToken:o})}catch(e){return console.log(e),void(0,u.badRequestError)(a,e)}}},7:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0}),a.pingOne=a.pingAll=void 0;const r=i(t(167)),s=t(170),o=t(994),n=t(37),u=t(10),d=i(t(621)),c=i(t(129)),l=i(t(445));a.pingAll=async(e,a)=>{try{const t=await(0,c.default)(e,a);if(!t)return void(0,n.unAuthenticatedError)(a,"Invalid Credentials");const i=await l.default.find({createdBy:t._id,monitoring:"on"});if(!i)return void(0,n.notFoundError)(a,"No APIs found");Object.keys(i).forEach((async(e,a)=>{try{const e=await r.default.get(i[a].url);e&&200===e.status&&await l.default.findOneAndUpdate({_id:i[a].id},{status:"healthy",lastPinged:(0,s.getDateWithUTCOffset)(t.timezoneGMT)},{new:!0,runValidators:!0})}catch(e){await l.default.findOneAndUpdate({_id:i[a].id},{status:"unhealthy",lastPinged:(0,s.getDateWithUTCOffset)(t.timezoneGMT)},{new:!0,runValidators:!0})}})),a.status(u.StatusCodes.OK).json(o.pingAllApisSuccessMsg)}catch(e){return console.log(e),void(0,n.badRequestError)(a,e)}},a.pingOne=async(e,a)=>{try{const t=await(0,c.default)(e,a);if(!t)return void(0,n.unAuthenticatedError)(a,"Invalid Credentials");const{id:i}=e.params,f=await l.default.findOne({_id:i});if(!f)return void(0,n.notFoundError)(a,`No API with id: ${i}`);(0,d.default)(a,t._id,f.createdBy);try{const e=await r.default.get(f.url);e&&200===e.status&&await l.default.findOneAndUpdate({_id:f.id},{status:"healthy",lastPinged:(0,s.getDateWithUTCOffset)(t.timezoneGMT)},{new:!0,runValidators:!0})}catch(e){await l.default.findOneAndUpdate({_id:f.id},{status:"unhealthy",lastPinged:(0,s.getDateWithUTCOffset)(t.timezoneGMT)},{new:!0,runValidators:!0})}a.status(u.StatusCodes.OK).json(o.pingOneApiSuccessMsg)}catch(e){return console.log(e),void(0,n.badRequestError)(a,e)}}},28:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const r=i(t(185));a.default=e=>r.default.connect(e)},747:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0}),a.seedApiCollection=a.seedUsersCollection=a.resetApiCollection=a.resetUsersCollection=void 0,i(t(445)),i(t(153));const r=i(t(142)),s=(t(124),t(527)),o=t(37);i(t(129)),r.default.config(),a.resetUsersCollection=async(e,a)=>{(0,o.badRequestError)(a,"Can only seed db in testing")},a.resetApiCollection=async(e,a)=>{(0,o.badRequestError)(a,"Can only seed db in testing")};const{name:n,email:u,password:d,timezoneGMT:c}=s.mockUser;a.seedUsersCollection=async(e,a)=>{(0,o.badRequestError)(a,"Can only seed db in testing")},a.seedApiCollection=async(e,a)=>{(0,o.badRequestError)(a,"Can only seed db in testing")}},213:(e,a)=>{var t,i,r,s;Object.defineProperty(a,"__esModule",{value:!0}),a.ApiStatusOptions=a.ApiSortOptions=a.ApiMonitoringOptions=a.ApiHostOptions=void 0,(s=a.ApiHostOptions||(a.ApiHostOptions={})).AWS="AWS",s.GCP="GCP",s.Azure="Azure",s.Heroku="Heroku",s.DigitalOcean="DigitalOcean",s.Other="Other",(r=a.ApiMonitoringOptions||(a.ApiMonitoringOptions={})).ON="on",r.OFF="off",(i=a.ApiSortOptions||(a.ApiSortOptions={})).Latest="Latest",i.Oldest="Oldest",i.A_Z="A-Z",i.Z_A="Z-A",(t=a.ApiStatusOptions||(a.ApiStatusOptions={})).Healthy="healthy",t.Unhealthy="unhealthy",t.Pending="pending"},37:(e,a,t)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.notFoundError=a.forbiddenError=a.unAuthenticatedError=a.badRequestError=void 0;const i=t(10);a.badRequestError=(e,a)=>{e.status(i.StatusCodes.BAD_REQUEST).json({error:`${a}`})},a.unAuthenticatedError=(e,a)=>{e.status(i.StatusCodes.UNAUTHORIZED).json({error:`${a}`})},a.forbiddenError=(e,a)=>{e.status(i.StatusCodes.FORBIDDEN).json({error:`${a}`})},a.notFoundError=(e,a)=>{e.status(i.StatusCodes.NOT_FOUND).json({error:`${a}`})}},566:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const r=i(t(344)),s=t(37),o=t(975);a.default=async(e,a,t)=>{const i=e.headers.authorization;if(!i||!i.startsWith("Bearer")||!e.cookies[o.cookieName])return void(0,s.unAuthenticatedError)(a,"Invalid credentials, please login again");const n=i.split(" ")[1];try{const a=r.default.verify(n,process.env.JWT_SECRET);r.default.verify(e.cookies[o.cookieName],process.env.JWT_SECRET),e.user={userId:a.userId},t()}catch(e){return void(0,s.unAuthenticatedError)(a,"Please login again")}}},271:(e,a,t)=>{Object.defineProperty(a,"__esModule",{value:!0});const i=t(10);a.default=(e,a,t,r)=>{const s={statusCode:e.statusCode||i.StatusCodes.INTERNAL_SERVER_ERROR,msg:e.message||"Something went wrong, try again later"};"ValidationError"===e.name&&(s.statusCode=i.StatusCodes.BAD_REQUEST,s.msg=Object.values(e.errors).map((e=>e.message)).join(",")),e.code&&11e3===e.code&&(s.statusCode=i.StatusCodes.BAD_REQUEST,s.msg=`${Object.keys(e.keyValue)} field has to be unique`),t.status(s.statusCode).json({msg:s.msg}),r()}},223:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.default=(e,a,t)=>{a.status(404).json({error:"Route does not exist"}),t()}},124:(e,a,t)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.mockApis=void 0;const i=t(213);a.mockApis=[{url:"https://battery-cellify.herokuapp.com/ping",host:i.ApiHostOptions.Heroku,status:i.ApiStatusOptions.Pending,lastPinged:"Never pinged",monitoring:i.ApiMonitoringOptions.ON,__v:0},{url:"https://www.hello-herokuapp2.com/ping",host:i.ApiHostOptions.Heroku,status:i.ApiStatusOptions.Pending,lastPinged:"Never pinged",monitoring:i.ApiMonitoringOptions.OFF,__v:0},{url:"https://www.not1arealwebsitehopefully5.com/ping",host:i.ApiHostOptions.Heroku,status:i.ApiStatusOptions.Pending,lastPinged:"Never pinged",monitoring:i.ApiMonitoringOptions.ON,__v:0},{url:"https://www.not1arealwebsitehopefully2.com/ping",host:i.ApiHostOptions.AWS,status:i.ApiStatusOptions.Pending,lastPinged:"Never pinged",monitoring:i.ApiMonitoringOptions.ON,__v:0},{url:"https://www.not1arealwebsitehopefully3.com/ping",host:i.ApiHostOptions.AWS,status:i.ApiStatusOptions.Pending,lastPinged:"Never pinged",monitoring:i.ApiMonitoringOptions.ON,__v:0}]},527:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.mockUser=void 0,a.mockUser={name:"jane",email:"janedoe1@gmail.com",password:"password",timezoneGMT:-4}},445:function(e,a,t){var i=this&&this.__createBinding||(Object.create?function(e,a,t,i){void 0===i&&(i=t);var r=Object.getOwnPropertyDescriptor(a,t);r&&!("get"in r?!a.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return a[t]}}),Object.defineProperty(e,i,r)}:function(e,a,t,i){void 0===i&&(i=t),e[i]=a[t]}),r=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:!0,value:a})}:function(e,a){e.default=a}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&i(a,e,t);return r(a,e),a};Object.defineProperty(a,"__esModule",{value:!0});const o=s(t(185)),n=new o.default.Schema({url:{type:String,required:[!0,"Please provide API URL"]},host:{type:String,enum:["AWS","GCP","Azure","Heroku","DigitalOcean","Other"],default:"Other"},status:{type:String,enum:["healthy","unhealthy","pending"],default:"pending"},lastPinged:{type:String,required:[!0,"Please provide last ping date and time"],default:"Never pinged"},monitoring:{type:String,enum:["on","off"],default:"off"},createdBy:{type:o.Schema.Types.ObjectId,ref:"User",required:[!0,"Please provide user"]}},{timestamps:!0}),u=o.default.model("ApiCollection",n);a.default=u},153:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const r=i(t(185)),s=i(t(564)),o=i(t(432)),n=i(t(344)),u=t(169),d=new r.default.Schema({name:{type:String,required:[!0,"Please provide name"],minlength:3,maxlength:20,trim:!0},email:{type:String,required:[!0,"Please provide email"],validate:{validator:s.default.isEmail,message:"Please provide a valid email"}},password:{type:String,required:[!0,"Please provide password"],minlength:6,select:!1},timezoneGMT:{type:Number,enum:u.timezoneOffsets,default:0}});d.pre("save",(async function(){if(!this.isModified("password"))return;const e=await o.default.genSalt(10);this.password=await o.default.hash(this.password,e)})),d.methods.createJWT=function(e){return n.default.sign({userId:this._id},process.env.JWT_SECRET,{expiresIn:e})},d.methods.comparePassword=async function(e,a){return await o.default.compare(e,a)};const c=r.default.model("User",d);a.default=c},316:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const r=t(860),s=i(t(985)),o=t(217),n=t(7),u=t(525),d=(0,r.Router)();function c(e,a){return(0,s.default)({windowMs:60*e*1e3,max:a,handler:(a,t)=>{t.status(429).json({msg:`Too many requests from this IP, \n        please try again after ${e} minutes`})}})}d.route(`${u.createApiUrl}`).post(c(15,10),o.createApi),d.route(`${u.getAllApisUrl}`).get(o.getAllApis),d.route(`${u.getAllApisStatsUrl}`).get(o.showStats),d.route(`${u.deleteApiUrl}/:id`).delete(o.deleteApi),d.route(`${u.editApiUrl}/:id`).patch(o.updateApi),d.route(`${u.getApiUrl}/:id`).get(o.getApi),d.route(`${u.pingAllApisUrl}`).post(c(15,10),n.pingAll),d.route(`${u.pingOneApiUrl}/:id`).post(c(15,10),n.pingOne),a.default=d},11:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const r=i(t(860)),s=t(14),o=i(t(566)),n=i(t(985)),u=t(525),d=r.default.Router();function c(e,a){return(0,n.default)({windowMs:60*e*1e3,max:a,handler:(a,t)=>{t.status(429).json({msg:`Too many requests from this IP, \n        please try again after ${e} minutes`})}})}d.route(`${u.registerUserUrl}`).post(c(15,3),s.register),d.route(`${u.loginUserUrl}`).post(c(15,10),s.login),d.route(`${u.updateUserUrl}`).patch(o.default,s.updateUser),d.route(`${u.refreshAccessTokenUrl}`).get(s.refreshAccessToken),a.default=d},585:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const r=i(t(860)),s=i(t(566)),o=t(747),n=t(525),u=r.default.Router();u.route(`${n.resetMockUsersDbUrl}`).delete(o.resetUsersCollection),u.route(`${n.resetMockApisDbUrl}`).delete(o.resetApiCollection),u.route(`${n.seedMockUsersDbUrl}`).post(o.seedUsersCollection),u.route(`${n.seedMockApisDbUrl}`).post(s.default,o.seedApiCollection),a.default=u},728:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const r=t(994),s=t(525),o=i(t(582)),n=i(t(28)),u=i(t(142)),d=i(t(860));t(383);const c=i(t(821)),l=i(t(806)),f=i(t(566)),A=i(t(271)),m=i(t(223)),p=(i(t(470)),i(t(316))),T=i(t(11)),b=i(t(585)),S=i(t(396)),g=i(t(710)),v=(0,d.default)();u.default.config(),v.use(d.default.json()),v.use((0,l.default)()),v.use((0,S.default)()),v.use((0,c.default)()),v.use((0,o.default)({origin:[process.env.CORS_ORIGIN],credentials:!0})),v.use((0,g.default)()),v.use(s.pingHealthCheckUrl,((e,a)=>{a.send(r.pingHealthCheckSuccessMsg)})),v.use(`${s.baseAuthUrl}`,T.default),v.use(`${s.baseApiUrl}`,f.default,p.default),v.use(`${s.baseSeedDbUrl}`,b.default),v.use(m.default),v.use(A.default);const h=process.env.PORT||5e3;(async()=>{try{await(0,n.default)(process.env.MONGO_URL),v.listen(h,(()=>{console.log(`Server is listening on port ${h}...`)}))}catch(e){console.log(e)}})(),a.default=v},621:(e,a,t)=>{Object.defineProperty(a,"__esModule",{value:!0});const i=t(37);a.default=(e,a,t)=>a.toString()!==t.toString()?void(0,i.unAuthenticatedError)(e,"Not authorized to access"):void 0},170:(e,a)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.formatCurrentMonthYear=a.getDateWithUTCOffset=void 0,a.getDateWithUTCOffset=function(e,a=!0){try{const t=Date.now()+1e3*(new Date).getTimezoneOffset()*60+36e5*e;return`${new Intl.DateTimeFormat("en-US",{dateStyle:"medium",timeStyle:a?"medium":void 0}).format(t)} (GMT ${e})`}catch(e){return void console.error("Error getting date: ",e)}},a.formatCurrentMonthYear=function(e,a){const t=new Date(Date.UTC(e,a));return new Intl.DateTimeFormat("en-US",{month:"short",year:"numeric"}).format(t)}},40:(e,a,t)=>{Object.defineProperty(a,"__esModule",{value:!0}),a.validateInputKeys=void 0;const i=t(37);let r;a.validateInputKeys=function(e,a,t,s,o){r="query"===o?e.query:e.body,Object.keys(r).forEach((e=>{s.includes(e)||(0,i.badRequestError)(a,`${t}`+`${s}`.replace(/,/g,", "))}))}},129:function(e,a,t){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:!0});const r=t(37),s=i(t(153));a.default=async(e,a)=>{if(!e.user)return void(0,r.unAuthenticatedError)(a,"Unauthenticated action");const{userId:t}=e.user;if(!t)return void(0,r.unAuthenticatedError)(a,"Unauthenticated action");const i=await s.default.findOne({_id:t}).select("-__v");if(i)return i;(0,r.unAuthenticatedError)(a,"Unauthenticated action")}},167:e=>{e.exports=require("axios")},432:e=>{e.exports=require("bcryptjs")},710:e=>{e.exports=require("cookie-parser")},582:e=>{e.exports=require("cors")},142:e=>{e.exports=require("dotenv")},860:e=>{e.exports=require("express")},383:e=>{e.exports=require("express-async-errors")},821:e=>{e.exports=require("express-mongo-sanitize")},985:e=>{e.exports=require("express-rate-limit")},806:e=>{e.exports=require("helmet")},10:e=>{e.exports=require("http-status-codes")},344:e=>{e.exports=require("jsonwebtoken")},185:e=>{e.exports=require("mongoose")},470:e=>{e.exports=require("morgan")},564:e=>{e.exports=require("validator")},396:e=>{e.exports=require("xss-clean")}},a={};!function t(i){var r=a[i];if(void 0!==r)return r.exports;var s=a[i]={exports:{}};return e[i].call(s.exports,s,s.exports,t),s.exports}(728)})();